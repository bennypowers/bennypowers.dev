diff --git a/node_modules/eleventy-plugin-slide-decks/decks.js b/node_modules/eleventy-plugin-slide-decks/decks.js
index 53c2791..586bb43 100644
--- a/node_modules/eleventy-plugin-slide-decks/decks.js
+++ b/node_modules/eleventy-plugin-slide-decks/decks.js
@@ -3,6 +3,7 @@ import { basename } from 'node:path';
 import { load } from 'cheerio';
 import { lookup } from 'mime-types';
 import { bundle } from './scripts/bundle.js';
+import camelcase from 'camelcase';
 
 /** @import { UserConfig } from '@11ty/eleventy' */
 
@@ -106,6 +107,66 @@ export async function slideDecksPlugin(eleventyConfig, options = {}) {
 
   eleventyConfig.addFilter('byInputPath', byInputPath);
 
+  const templateDir = new URL('./templates/', import.meta.url);
+  for (const filename of await readdir(templateDir)) {
+    const content = await readFile(new URL(filename, templateDir), 'utf8')
+    eleventyConfig.addTemplate(`_includes/${filename}`, content, {
+      ...options?.templateData ?? {},
+      ...filename !== 'deck-base.html' && { layout: 'deck-base.html' },
+      eleventyExcludeFromCollections: ['slides'],
+      eleventyImport: {
+        collections: ['slides'],
+      },
+    });
+  }
+
+  eleventyConfig.addShortcode('transformSingleFileDeck', async function transformSingleFileDeck() {
+    // Parse slides
+    const lines = this.page.rawInput.split("\n");
+    const slides = [];
+    let current = null;
+    let content = '';
+
+    for (const line of lines) {
+      if (line.startsWith('#')) {
+        const { isSlide, tagName, ...attrs } = Object.fromEntries(
+          line
+            .replace(/.*\{(?<attrs>[^}]+)\}.*/, '$<attrs>')
+            .trim()
+            .split(' ')
+            .map(x => {
+              const [k, v] = x.replace(/^data-slide-?/,'').split('=');
+              return !k ? ["isSlide", true] : [camelcase(k), v];
+            }));
+        if (isSlide) {
+          if (current) {
+            slides.push(current);
+          }
+          const title = line.replace(/\{[^}]+\}/, '').trim();
+          const attrStr = Object.entries(attrs).map(([k, v]) => `${k}="${v.replace(/^(?:'|")(.*)(?:'|")$/, '$1')}"`).join(" ");
+          current = { tagName, attrs, content: `# ${title}${attrStr ? ` {${attrStr}}` : ''}\n`, };
+        } else if (current) {
+          current.content += line + "\n";
+        } else {
+          content += line + "\n";
+        }
+      } else if (current) {
+        current.content += line + "\n";
+      } else {
+        content += line + "\n";
+      }
+    }
+
+    if (current)
+      slides.push(current);
+
+    const rendered = await Promise.all(slides.map(async ({ tagName, attrs, content }) => {
+      return `<${tagName}>${await eleventyConfig.javascript.functions.renderTemplate(content, 'md')}</${tagName}>`;
+    }));
+
+    return content + '\n' + rendered.join("\n");
+  });
+
   for (const ext of assetsExtensions)
     eleventyConfig.addPassthroughCopy(`${decksDir}/**/*.${ext}`);
 
@@ -115,22 +176,6 @@ export async function slideDecksPlugin(eleventyConfig, options = {}) {
     .map(assignMetadata)
     .sort(byInputPath));
 
-  const templateDir = new URL('./templates/', import.meta.url);
-  for (const filename of await readdir(templateDir)) {
-    eleventyConfig.addTemplate(
-      'deck.html',
-      await readFile(new URL(filename, templateDir), 'utf8'),
-      {
-        ...options?.templateData ?? {},
-        layout: false,
-        eleventyExcludeFromCollections: ['slides'],
-        eleventyImport: {
-          collections: ['slides'],
-        },
-      },
-    )
-  }
-
   /** bundle slidem deck dependencies */
   eleventyConfig.on('eleventy.before', bundle.bind(this, eleventyConfig, options));
 }
diff --git a/node_modules/eleventy-plugin-slide-decks/templates/deck-base.html b/node_modules/eleventy-plugin-slide-decks/templates/deck-base.html
new file mode 100644
index 0000000..934b850
--- /dev/null
+++ b/node_modules/eleventy-plugin-slide-decks/templates/deck-base.html
@@ -0,0 +1,111 @@
+<!doctype html>
+<html lang="{{ lang or 'en' }}" dir="{{ dir or 'ltr' }}">
+  <head>
+    <meta charset="utf-8">
+    <title>{{ title }}</title>
+    <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,user-scalable=yes">
+    <meta name="mobile-web-app-capable" content="yes">
+    <meta name="application-name" content="{{ title }}">
+    <meta name="apple-mobile-web-app-capable" content="yes">
+    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
+    <meta name="apple-mobile-web-app-title" content="{{ title }}">
+    {% if author %}<meta name="author" content="{{ author }}">{% endif %}
+    {% if date %}<meta name="date.created" content="{{ date }}">{% endif %}
+    <meta name="HandheldFriendly" content="true">
+    {% if description %}
+    <meta name="description" content="{{ description | trim }}">
+    <meta property="og:description" content="{{ description | trim }}">
+    {% endif %}
+    <meta property="og:title" content="{{ title }}">
+    <meta property="og:site_name" content="{{ title }}">
+    <meta property="og:type" content="website">
+    <meta property="og:locale" content="{{ locale or 'en-US' }}">
+    <meta property="og:url" content="{{ origin }}{{ page.url or '/'}}">
+    {% if coverImage %}
+    <meta property="og:image" content="{{ coverImage }}">
+    <meta property="og:image:type" content="{{ coverImage | mime }}">
+    <!-- TODO: calculate cover image dimensions -->
+    <meta property="og:image:width" content="1024">
+    <meta property="og:image:height" content="1024">
+    {% endif %}
+
+    {% for link in preconnect %}
+    <link rel="preconnect" href="{{ link }}">{% endfor %}
+
+    {% for icon in icons %}
+    <link rel="{{ icon.rel }}"{% if icon.sizes %} sizes="{{ icon.sizes }}"{% endif %} href="{{ icon.href | url }}">{% endfor %}
+    <link rel="manifest" href="{{ manifest or '/manifest.webmanifest' | url }}">
+
+    <noscript><style>:not(:defined) { display: initial; }</style></noscript>
+
+    {% for sheet in stylesheets %}
+    <link rel="stylesheet"{% if sheet.media %}
+          media="{{ sheet.media }}"{% endif %}{% if sheet.async %}
+          async{% endif %}
+          href="{{ sheet.href | url }}">
+    {% endfor %}
+
+    {% if importMap %}
+    <script type="importmap">{{ importMap | dump | safe }}</script>{% endif %}
+    {% if polyfills.esmoduleShims -%}
+    <script async src="https://ga.jspm.io/npm:es-module-shims@1.7.2/dist/es-module-shims.js"></script>{% endif %}
+
+    {% for script in scripts %}
+    <script {% if script.type -%}
+            type="{{ script.type }}"{%- endif -%}
+            src="{{ script.src | url }}"></script>
+    {% endfor %}
+
+    {% if polyfills.constructibleStyleSheets -%}
+    <script type="module" src="https://unpkg.com/construct-style-sheets-polyfill"></script>{% endif %}
+    {% if polyfills.webcomponents -%}
+    <script type="module" src="https://unpkg.com/@webcomponents/webcomponentsjs@%5E2/"></script>{% endif %}
+
+    <script type="module" src="{{ '/assets/decks.min.js' | url }}"></script>
+
+    <style>
+      body {
+        height: 100vh;
+        max-height: 100vh;
+        overflow: hidden;
+        max-width: 100vw;
+        padding: 0;
+      }
+
+      main { position: relative; }
+
+      main,
+      slidem-deck { height: 100%; }
+
+      #footer {
+        position: fixed;
+        font-size: 80%;
+        inset-block-end: 1em;
+        inset-inline-end: 1em;
+        z-index: 2;
+      }
+
+      #slides-progress {
+        --sl-border-radius-pill: 0;
+        --indicator-color: var(--deck-primary-color);
+        --height: 100%;
+        width: 100%;
+      }
+
+      slidem-deck::part(progress) {
+        width: 100%;
+        height: 5px;
+        top: 0;
+      }
+    </style>
+  </head>
+  <body class="deck">
+    <main>
+      {{ content | safe }}
+    </main>
+    <footer id="footer" class="screen-only">
+      <small id="legal">{{ copyright }}</small>
+    </footer>
+  </body>
+</html>
+
diff --git a/node_modules/eleventy-plugin-slide-decks/templates/deck.html b/node_modules/eleventy-plugin-slide-decks/templates/deck.html
index 9590b14..87ea253 100644
--- a/node_modules/eleventy-plugin-slide-decks/templates/deck.html
+++ b/node_modules/eleventy-plugin-slide-decks/templates/deck.html
@@ -1,124 +1,15 @@
-<!doctype html>
-<html lang="{{ lang or 'en' }}" dir="{{ dir or 'ltr' }}">
-  <head>
-    <meta charset="utf-8">
-    <title>{{ title }}</title>
-    <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,user-scalable=yes">
-    <meta name="mobile-web-app-capable" content="yes">
-    <meta name="application-name" content="{{ title }}">
-    <meta name="apple-mobile-web-app-capable" content="yes">
-    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
-    <meta name="apple-mobile-web-app-title" content="{{ title }}">
-    {% if author %}<meta name="author" content="{{ author }}">{% endif %}
-    {% if date %}<meta name="date.created" content="{{ date }}">{% endif %}
-    <meta name="HandheldFriendly" content="true">
-    {% if description %}
-    <meta name="description" content="{{ description | trim }}">
-    <meta property="og:description" content="{{ description | trim }}">
-    {% endif %}
-    <meta property="og:title" content="{{ title }}">
-    <meta property="og:site_name" content="{{ title }}">
-    <meta property="og:type" content="website">
-    <meta property="og:locale" content="{{ locale or 'en-US' }}">
-    <meta property="og:url" content="{{ origin }}{{ page.url or '/'}}">
-    {% if coverImage %}
-    <meta property="og:image" content="{{ coverImage }}">
-    <meta property="og:image:type" content="{{ coverImage | mime }}">
-    <!-- TODO: calculate cover image dimensions -->
-    <meta property="og:image:width" content="1024">
-    <meta property="og:image:height" content="1024">
-    {% endif %}
-
-    {% for link in preconnect %}
-    <link rel="preconnect" href="{{ link }}">{% endfor %}
-
-    {% for icon in icons %}
-    <link rel="{{ icon.rel }}"{% if icon.sizes %} sizes="{{ icon.sizes }}"{% endif %} href="{{ icon.href | url }}">{% endfor %}
-    <link rel="manifest" href="{{ manifest or '/manifest.webmanifest' | url }}">
-
-    <noscript><style>:not(:defined) { display: initial; }</style></noscript>
-
-    {% for sheet in stylesheets %}
-    <link rel="stylesheet"{% if sheet.media %}
-          media="{{ sheet.media }}"{% endif %}{% if sheet.async %}
-          async{% endif %}
-          href="{{ sheet.href | url }}">
-    {% endfor %}
-
-    {% if importMap %}
-    <script type="importmap">{{ importMap | dump | safe }}</script>{% endif %}
-    {% if polyfills.esmoduleShims -%}
-    <script async src="https://ga.jspm.io/npm:es-module-shims@1.7.2/dist/es-module-shims.js"></script>{% endif %}
-
-    {% for script in scripts %}
-    <script {% if script.type -%}
-            type="{{ script.type }}"{%- endif -%}
-            src="{{ script.src | url }}"></script>
-    {% endfor %}
-
-    {% if polyfills.constructibleStyleSheets -%}
-    <script type="module" src="https://unpkg.com/construct-style-sheets-polyfill"></script>{% endif %}
-    {% if polyfills.webcomponents -%}
-    <script type="module" src="https://unpkg.com/@webcomponents/webcomponentsjs@%5E2/"></script>{% endif %}
-
-    <script type="module" src="{{ '/assets/decks.min.js' | url }}"></script>
-
-    <style>
-      body {
-        height: 100vh;
-        max-height: 100vh;
-        overflow: hidden;
-        max-width: 100vw;
-        padding: 0;
-      }
-
-      main { position: relative; }
-
-      main,
-      slidem-deck { height: 100%; }
-
-      #footer {
-        position: fixed;
-        font-size: 80%;
-        inset-block-end: 1em;
-        inset-inline-end: 1em;
-        z-index: 2;
-      }
-
-      #slides-progress {
-        --sl-border-radius-pill: 0;
-        --indicator-color: var(--deck-primary-color);
-        --height: 100%;
-        width: 100%;
-      }
-
-      slidem-deck::part(progress) {
-        width: 100%;
-        height: 5px;
-        top: 0;
-      }
-    </style>
-  </head>
-  <body class="deck">
-    <main>
-      <slidem-deck id="deck">
-        <sl-progress-bar slot="progress" id="slides-progress" indeterminate></sl-progress-bar>
-        {% for slide in collections.slides %}
-        {% if slide.deck == deck %}
-        <{{ slide.data.is or 'slidem-slide' }}
-            {%- if slide.data.name %} name="{{ slide.data.name }}"{% endif %}
-            {%- if slide.data.class %} class="{{ slide.data.class }}"{% endif %}
-            {%- if slide.data.style %} style="{{ slide.data.style | stringifyCSSStyle }}"{% endif %}>
-          {{ slide.templateContent | reveal(slide.data.reveal) | safe }}
-        </{{ slide.data.is or 'slidem-slide' }}>
-        {% endif %}
-        {% endfor %}
-      </slidem-deck>
-      {{ content | safe }}
-    </main>
-    <footer id="footer" class="screen-only">
-      <small id="legal">{{ copyright }}</small>
-    </footer>
-  </body>
-</html>
+<slidem-deck id="deck">
+  <sl-progress-bar slot="progress" id="slides-progress" indeterminate></sl-progress-bar>
+  {% for slide in collections.slides %}
+  {% if slide.deck == deck %}
+  <{{ slide.data.is or 'slidem-slide' }}
+      {%- if slide.data.name %} name="{{ slide.data.name }}"{% endif %}
+      {%- if slide.data.class %} class="{{ slide.data.class }}"{% endif %}
+      {%- if slide.data.style %} style="{{ slide.data.style | stringifyCSSStyle }}"{% endif %}>
+    {{ slide.templateContent | reveal(slide.data.reveal) | safe }}
+  </{{ slide.data.is or 'slidem-slide' }}>
+  {% endif %}
+  {% endfor %}
+</slidem-deck>
+{{ content | safe }}
 
diff --git a/node_modules/eleventy-plugin-slide-decks/templates/single-file-deck.html b/node_modules/eleventy-plugin-slide-decks/templates/single-file-deck.html
new file mode 100644
index 0000000..a04af7c
--- /dev/null
+++ b/node_modules/eleventy-plugin-slide-decks/templates/single-file-deck.html
@@ -0,0 +1,4 @@
+<slidem-deck id="deck">
+  <sl-progress-bar slot="progress" id="slides-progress" indeterminate></sl-progress-bar>
+  {% transformSingleFileDeck %}
+</slidem-deck>
