diff --git a/node_modules/slidem/README.md b/node_modules/slidem/README.md
new file mode 100644
index 0000000..887560c
--- /dev/null
+++ b/node_modules/slidem/README.md
@@ -0,0 +1,67 @@
+# Slide'm
+
+HTML Presentation Library
+
+So you can write your decks in HTML and share them with the world
+
+```html
+<script type="module" src="https://unpkg.com/slidem?module"></script>
+
+<slidem-deck font="Open Sans Condensed" loading>
+  <slidem-slide center in="slide" background="--primary">
+    <h1 uppercase fit line-height="0.8" color="black">Slide'm</h1>
+    <p uppercase fit color="black">HTML Presentation Library</p>
+    <p uppercase fit color="white">
+      So you can write your decks in HTML and share them with the world
+    </p>
+    <p uppercase center font-size="78px" line-height="1.8" color="black">
+      <a href="https://github.com/ruphin/slidem">View on GitHub</a>
+    </p>
+    <p center font-size="78px" color="white">Right Arrow or Swipe Left to Begin!</p>
+  </slidem-slide>
+
+  <slidem-slide center in="slide" out="slide" background="black">
+    <div center>
+      <img src="/images/what.png" />
+    </div>
+    <p line-height="1.3" uppercase fit color="--primary">Wait what?</p>
+  </slidem-slide>
+
+  <slidem-slide center in="zoom" out="zoom" background="--primary">
+    <div center>
+      <img src="/images/codeSample.png">
+    </div>
+  </slidem-slide>
+</slidem-deck>
+```
+
+## Slide Transitions
+
+Add the `in` and, `out` attributes to a `<slidem-slide>` to control its 
+transitions. These attributes take one of three values: `fade`, `slide`, or 
+`zoom`.
+
+Add the `reveal` attribute to slide content to have those elements transition in 
+one by one. Link to specific states with the `#slide-${number}/step-${number}` 
+URL hash, e.g. to link to the 3rd slide's 4th step, use `#slide-3/step-4`.
+
+## Presenter Mode
+
+Press `p` to enter presenter mode. You can add presenter notes to your slides by 
+slotting them into the `notes` slot. While in presenter mode, press `t` to 
+toggle the slide timer.
+
+## Colours and Typography
+
+Slidem provides some HTML extensions to make it easy to quickly style your 
+slides. You can of course use CSS to do the same.
+
+Add `fit` to any content element (e.g. `<p>`, `<h2>` or `<strong>`) to have it 
+grow to fill the slide width. Add `uppercase` to transform it to uppercase. Use 
+the `color` attribute to change it's color. Add `line-height` to change an 
+element's line height.
+
+Use the `background` attribute on `<slidem-slide>` to set the background. it's 
+value can be a CSS colour value, a CSS Custom Property name, or a URL to an 
+image.
+
diff --git a/node_modules/slidem/slidem-deck.js b/node_modules/slidem/slidem-deck.js
index 503d779..eccfd6e 100644
--- a/node_modules/slidem/slidem-deck.js
+++ b/node_modules/slidem/slidem-deck.js
@@ -1,553 +1,667 @@
-import { GluonElement, html } from '../@gluon/gluon/gluon.js';
-import { onRouteChange, currentPath, currentQuery, currentHash } from '../@gluon/router/gluon-router.js';
+/**
+ * @license
+MIT License
+
+Copyright (c) 2017 Goffert van Gool
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+
+*/
+var __defProp = Object.defineProperty;
+var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __publicField = (obj, key, value) => {
+  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
+  return value;
+};
+var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
 
-import '../fontfaceobserver/fontfaceobserver.standalone.js';
-import '../@gluon/keybinding/gluon-keybinding.js';
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-deck-global.css
+var sheet = new CSSStyleSheet();
+sheet.replace(`/* SLIDEM GLOBAL STYLES */
+body {
+  margin: 0;
+}
 
-const styleText = document.createTextNode(`
-  /* SLIDEM GLOBAL STYLES */
-  body {
-    margin: 0;
-  }
+slidem-deck [reveal] {
+  opacity: 0;
+  transition: opacity 0.2s;
+}
 
-  [reveal] {
-    opacity: 0;
-    transition: opacity 0.2s;
-  }
+/* SLIDEM SLIDE GLOBAL STYLES */
 
-  /* Keyframes are defined here to patch a scoping bug in Chrome */
-  @keyframes slidem-fade-in {
-    from {
-      opacity: 0;
-    }
-    to {
-      opacity: 1;
-    }
-  }
+slidem-deck [reveal] {
+  opacity: 0;
+  transition: opacity 0.2s;
+}
 
-  @keyframes slidem-fade-out {
-    from {
-      opacity: 1;
-    }
-    to {
-      opacity: 0;
-    }
-  }
+slidem-deck [current],
+slidem-deck [past] {
+  opacity: 1;
+}
+/* SLIDEM BASIC SLIDE STYLE */
+slidem-slide h1,
+slidem-slide h2,
+slidem-slide h3,
+slidem-slide h4,
+slidem-slide h5,
+slidem-slide h6,
+slidem-slide p {
+  margin-top: 0px;
+  margin-bottom: 0px;
+}
 
-  @keyframes slidem-slide-in-forward {
-    from {
-      transform: translateX(100vw);
-    }
-    to {
-      transform: translateX(0);
-    }
-  }
+slidem-slide a {
+  color: inherit;
+  text-decoration: none;
+}
 
-  @keyframes slidem-slide-in-backward {
-    from {
-      transform: translateX(0);
-    }
-    to {
-      transform: translateX(100vw);
-    }
-  }
+/* Keyframes are defined here to patch a scoping bug in Chrome */
+@keyframes slidem-fade-in {
+  from { opacity: 0; }
+  to { opacity: 1; }
+}
 
-  @keyframes slidem-slide-out-forward {
-    from {
-      transform: translateX(0);
-    }
-    to {
-      transform: translateX(-100vw);
-    }
-  }
+@keyframes slidem-fade-out {
+  from { opacity: 1; }
+  to { opacity: 0; }
+}
+
+@keyframes slidem-slide-in-forward {
+  from { translate: 100vw 0; }
+  to { translate: 0 0; }
+}
+
+@keyframes slidem-slide-in-backward {
+  from { translate: 0 0; }
+  to { translate: 100vw 0; }
+}
+
+@keyframes slidem-slide-out-forward {
+  from { translate: 0 0; }
+  to { translate: -100vw 0; }
+}
+
+@keyframes slidem-slide-out-backward {
+  from { translate: -100vw 0; }
+  to { translate: 0 0; }
+}
 
-  @keyframes slidem-slide-out-backward {
-    from {
-      transform: translateX(-100vw);
-    }
-    to {
-      transform: translateX(0);
-    }
-  }
 `);
+var slidem_deck_global_default = sheet;
+
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-deck.css
+var sheet2 = new CSSStyleSheet();
+sheet2.replace(`:host {
+  /* inset for active slide */
+  --active-inset-block-start: calc(25% - 20px);
+  --active-inset-block-end: calc(25% - 20px);
+  --active-inset-inline-start: calc(5% - 20px);
+  --active-inset-inline-end: calc(45% - 20px);
+
+  /* inset for next slide */
+  --presenter-inset-block-start: calc(32.5% - 20px);
+  --presenter-inset-block-end: calc(32.5% - 20px);
+  --presenter-inset-inline-start: calc(60.5% - 20px);
+  --presenter-inset-inline-end: calc(4.5% - 20px);
+}
 
-const styleNode = document.createElement('style');
-styleNode.appendChild(styleText);
-document.head.appendChild(styleNode);
-
-export class SlidemDeck extends GluonElement {
-  get template() {
-    return html`
-      <div class="slides">
-        <slot id="slides"></slot>
-      </div>
-      <div id="progress"></div>
-      <div id="timer"></div>
-      <gluon-keybinding id="timerToggle" key="t"></gluon-keybinding>
-      <gluon-keybinding id="presenterToggle" key="p"></gluon-keybinding>
-      <div id="forward">
-        <gluon-keybinding key="PageDown"></gluon-keybinding>
-        <gluon-keybinding key="ArrowRight"></gluon-keybinding>
-        <gluon-keybinding key="Right"></gluon-keybinding>
-        <slot name="forward"></slot>
-      </div>
-      <div id="backward">
-        <gluon-keybinding key="PageUp"></gluon-keybinding>
-        <gluon-keybinding key="ArrowLeft"></gluon-keybinding>
-        <gluon-keybinding key="Left"></gluon-keybinding>
-        <slot name="backward"></slot>
-      </div>
-      <style>
-        @keyframes slidem-fade-in {
-          from {
-            opacity: 0;
-          }
-          to {
-            opacity: 1;
-          }
-        }
+:host {
+  display: block;
+  overflow: hidden;
+  position: absolute;
+  inset: 0 0 0 0;
+  font-family: 'sans-serif';
+  font-size: 56px;
+  line-height: 1;
+}
 
-        @keyframes slidem-fade-out {
-          from {
-            opacity: 1;
-          }
-          to {
-            opacity: 0;
-          }
-        }
+#slides ::slotted(*) {
+  position: absolute;
+  inset: 0 0 0 0;
+  animation-duration: 0.4s;
+  animation-fill-mode: both;
+  animation-timing-function: ease-in-out;
+}
 
-        @keyframes slidem-slide-in-forward {
-          from {
-            transform: translateX(100vw);
-          }
-          to {
-            transform: translateX(0);
-          }
-        }
+#slides ::slotted(:not([active]):not([previous]):not([next])) {
+  display: none;
+}
 
-        @keyframes slidem-slide-in-backward {
-          from {
-            transform: translateX(0);
-          }
-          to {
-            transform: translateX(100vw);
-          }
-        }
+:host(:not([presenter])) #slides ::slotted([next]:not([previous])) {
+  display: none;
+}
 
-        @keyframes slidem-slide-out-forward {
-          from {
-            transform: translateX(0);
-          }
-          to {
-            transform: translateX(-100vw);
-          }
-        }
+#progress {
+  position: absolute;
+  inset-block-end: 0;
+  inset-inline-start: 0;
+  inset-inline-end: 0;
+  height: 50px;
+  text-align: center;
+  display: flex;
+  flex-flow: row;
+  justify-content: center;
+  z-index: 10;
+}
 
-        @keyframes slidem-slide-out-backward {
-          from {
-            transform: translateX(-100vw);
-          }
-          to {
-            transform: translateX(0);
-          }
-        }
-        :host {
-          display: block;
-          overflow: hidden;
-          position: absolute;
-          top: 0;
-          left: 0;
-          bottom: 0;
-          right: 0;
-          font-family: 'sans-serif';
-          font-size: 56px;
-          line-height: 1;
-        }
+#progress div {
+  height: 8px;
+  width: 8px;
+  border-radius: 50%;
+  border: 2px solid white;
+  margin-left: 6px;
+  margin-right: 6px;
+  background: transparent;
+  transition: background 0.2s, scale 0.2s;
+}
 
-        .slides ::slotted(*) {
-          position: absolute;
-          top: 0;
-          right: 0;
-          bottom: 0;
-          left: 0;
-          animation-duration: 0.4s;
-          animation-fill-mode: both;
-          animation-timing-function: ease-in-out;
-        }
+#progress div.active {
+  background: white;
+  scale: 1.3
+}
 
-        .slides ::slotted(:not([active]):not([previous]):not([next])) {
-          display: none;
-        }
+:host([progress="dark"]) #progress div {
+  border: 2px solid black;
+}
 
-        :host(:not([presenter])) .slides ::slotted([next]:not([previous])) {
-          display: none;
-        }
+:host([progress="dark"]) #progress div.active {
+  background: black;
+}
 
-        #progress {
-          position: absolute;
-          bottom: 0px;
-          left: 0;
-          right: 0;
-          height: 50px;
-          text-align: center;
-          display: flex;
-          flex-flow: row;
-          justify-content: center;
-          z-index: 10;
-        }
-        #progress div {
-          height: 8px;
-          width: 8px;
-          border-radius: 50%;
-          border: 2px solid white;
-          margin-left: 6px;
-          margin-right: 6px;
-          background: transparent;
-          transition: background 0.2s, transform 0.2s;
-        }
-        #progress div.active {
-          background: white;
-          transform: scale(1.3);
-        }
-        :host([progress="dark"]) #progress div {
-          border: 2px solid black;
-        }
-        :host([progress="dark"]) #progress div.active {
-          background: black;
-        }
-        :host([progress="none"]) #progress {
-          display: none;
-        }
+:host([progress="none"]) #progress {
+  display: none;
+}
 
-        #timer {
-          display: none;
-          position: absolute;
-          top: 5%;
-          right: 5%;
-          color: white;
-          font-size: 4vw;
-          font-weight: bold;
-          font-family: Helvetica, Arial, sans-serif;
-        }
-        :host([presenter]) #timer {
-          display: inline;
-        }
+#timer {
+  display: none;
+  position: absolute;
+  inset-block-start: 5%;
+  inset-inline-end: 5%;
+  color: white;
+  font-size: 4vw;
+  font-weight: bold;
+  font-family: Helvetica, Arial, sans-serif;
+}
 
-        :host([presenter]) {
-          background: black;
-        }
-        /* White box around active slide */
-        :host([presenter])::before {
-          display: block;
-          position: absolute;
-          content: '';
-          top: calc(25% - 20px);
-          right:  calc(45% - 20px);
-          bottom:  calc(25% - 20px);
-          left:  calc(5% - 20px);
-          border: 2px solid white;
-        }
-        /* White box around next slide */
-        :host([presenter])::after {
-          display: block;
-          position: absolute;
-          content: '';
-          top: calc(32.5% - 20px);
-          right: calc(4.5% - 20px);
-          bottom: calc(32.5% - 20px);
-          left: calc(60.5% - 20px);
-          border: 2px solid white;
-        }
-        :host([presenter]) .slides ::slotted(*) {
-          animation: none !important; /* Block user-configured animations */
-        }
-        :host([presenter]) .slides ::slotted([previous]:not([next])) {
-          display: none;
-        }
-        :host([presenter]) .slides ::slotted([active]) {
-          transform: translate(-20%, 0) scale(0.5) !important; /* Force presenter layout */
-        }
-        :host([presenter]) .slides ::slotted([next]) {
-          transform: translate(28%, 0) scale(0.35) !important; /* Force presenter layout */
-        }
+:host([presenter]) #timer {
+  display: inline;
+}
 
-        .slides ::slotted([active]) {
-          z-index: 2;
-        }
-        .slides ::slotted([previous]) {
-          z-index: 0;
-        }
-        .slides ::slotted([fade-in][active].animate-forward) {
-          animation-name: slidem-fade-in;
-        }
-        .slides ::slotted([fade-in][previous].animate-backward) {
-          animation-name: slidem-fade-out;
-          z-index: 3;
-        }
-        .slides ::slotted([fade-out][active].animate-backward) {
-          animation-name: slidem-fade-in;
-        }
-        .slides ::slotted([fade-out][previous].animate-forward) {
-          animation-name: slidem-fade-out;
-          z-index: 3;
-        }
-        .slides ::slotted([slide-in][active].animate-forward) {
-          animation-name: slidem-slide-in-forward;
-        }
-        .slides ::slotted([slide-in][previous].animate-backward) {
-          animation-name: slidem-slide-in-backward;
-          z-index: 3;
-        }
-        .slides ::slotted([slide-out][active].animate-backward) {
-          animation-name: slidem-slide-out-backward;
-        }
-        .slides ::slotted([slide-out][previous].animate-forward) {
-          animation-name: slidem-slide-out-forward;
-          z-index: 3;
-        }
-      </style>
-    `;
-  }
+:host([presenter]) {
+  background: black;
+}
 
-  get presenter() {
-    return this.getAttribute('presenter') !== null;
-  }
+/* White box around active slide */
+:host([presenter])::before,
+:host([presenter])::after {
+  display: block;
+  position: absolute;
+  content: '';
+  border: 2px solid white;
+}
 
-  set presenter(value) {
-    if (value) {
-      this.setAttribute('presenter', '');
-    } else {
-      this.removeAttribute('presenter');
-    }
-  }
+:host([presenter])::before {
+  inset-block: var(--active-inset-block-start) var(--active-inset-block-end);
+  inset-inline: var(--active-inset-inline-start) var(--active-inset-inline-end);
+}
 
-  connectedCallback() {
-    super.connectedCallback();
+/* White box around next slide */
+:host([presenter])::after {
+  inset-block: var(--presenter-inset-block-start) var(--presenter-inset-block-end);
+  inset-inline: var(--presenter-inset-inline-start) var(--presenter-inset-inline-end);
+}
 
-    // Initialize presenter mode based on the '?presenter' query being present
-    this.presenter = currentQuery() === 'presenter';
+:host([presenter]) #slides ::slotted(*) {
+  animation: none !important; /* Block user-configured animations */
+}
 
-    // Enable presenter mode toggle
-    this.$.presenterToggle.addEventListener('click', () => {
-      this.presenter = !this.presenter;
-      changeLocation({ query: (this.presenter && 'presenter') || '', hash: currentHash() });
-    });
+:host([presenter]) #slides ::slotted([previous]:not([next])) {
+  display: none;
+}
 
-    // Presenter mode timer
-    let timerInterval;
-    this.$.timerToggle.addEventListener('click', () => {
-      if (timerInterval) {
-        clearInterval(timerInterval);
-        timerInterval = undefined;
-        this.$.timer.innerText = '';
-      } else {
-        this.$.timer.innerText = '00:00';
-        let begin = new Date();
-        timerInterval = setInterval(() => (this.$.timer.innerText = __timer(begin)), 1000);
-      }
-    });
+:host([presenter]) #slides ::slotted([active]) {
+  translate: -20% 0;
+  scale: 0.5 !important; /* Force presenter layout */
+}
 
-    this.slides = Array.from(this.children).filter(item => !item.hasAttribute('slot'));
+:host([presenter]) #slides ::slotted([next]) {
+  translate: 28% 0;
+  scale: 0.35 !important; /* Force presenter layout */
+}
 
-    // Create dots for progress bar
-    this.slides.forEach(() => {
-      this.$.progress.appendChild(document.createElement('div'));
-    });
+:host([presenter]) #progress {
+  translate: -20% 25vh;
+  scale: 0.5;
+}
 
-    /**
-     * Routing system
-     *
-     * Handles route changes and displays / animates the slides by changing classes and attributes
-     */
-    onRouteChange(() => {
-      this.slides[this.currentSlide].step = this.currentStep + 1;
-      this.slides[this.currentSlide].setAttribute('active', '');
-
-      if (this.previousSlide === this.currentSlide) {
-        return;
-      }
+#notes {
+  font-size: 18px;
+  position: absolute;
+  inset-block-start: calc(var(--presenter-inset-block-start) + var(--presenter-inset-block-end) + 80px);
+  inset-inline-start: var(--presenter-inset-inline-start);
+}
 
-      if (this.previousSlide !== undefined) {
-        if (this.previousSlide < this.currentSlide) {
-          this.slides[this.previousSlide].classList.add('animate-forward');
-          this.slides[this.currentSlide].classList.add('animate-forward');
-          this.slides[this.previousSlide].classList.remove('animate-backward');
-          this.slides[this.currentSlide].classList.remove('animate-backward');
-        } else {
-          this.slides[this.previousSlide].classList.add('animate-backward');
-          this.slides[this.currentSlide].classList.add('animate-backward');
-          this.slides[this.previousSlide].classList.remove('animate-forward');
-          this.slides[this.currentSlide].classList.remove('animate-forward');
-        }
-      }
+:host(:not([presenter])) #notes,
+#notes ::slotted(:not([active])) {
+  display: none !important;
+}
 
-      if (this.oldNextSlide !== undefined) {
-        this.slides[this.oldNextSlide].removeAttribute('next');
-      }
+#slides ::slotted([active]) {
+  z-index: 2;
+}
 
-      this.nextSlide = (this.slides[this.currentSlide + 1] && this.currentSlide + 1) || undefined;
-      if (this.nextSlide !== undefined) {
-        this.slides[this.nextSlide].setAttribute('next', '');
-        this.oldNextSlide = this.nextSlide;
-      }
+#slides ::slotted([previous]) {
+  z-index: 0;
+}
 
-      if (this.oldPreviousSlide !== undefined) {
-        this.slides[this.oldPreviousSlide].removeAttribute('previous');
-      }
+#slides ::slotted([in=fade][active].animate-forward) {
+  animation-name: slidem-fade-in;
+}
 
-      if (this.previousSlide !== undefined) {
-        this.slides[this.previousSlide].removeAttribute('active');
-        this.slides[this.previousSlide].setAttribute('previous', '');
-        this.$.progress.children[this.previousSlide].classList.remove('active');
-        this.oldPreviousSlide = this.previousSlide;
-      }
+#slides ::slotted([in=fade][previous].animate-backward) {
+  animation-name: slidem-fade-out;
+  z-index: 3;
+}
+
+#slides ::slotted([out=fade][active].animate-backward) {
+  animation-name: slidem-fade-in;
+}
 
-      this.$.progress.children[this.currentSlide].classList.add('active');
+#slides ::slotted([out=fade][previous].animate-forward) {
+  animation-name: slidem-fade-out;
+  z-index: 3;
+}
 
-      this.previousSlide = this.currentSlide;
-    });
+#slides ::slotted([in=slide][active].animate-forward) {
+  animation-name: slidem-slide-in-forward;
+}
 
-    const changeLocation = ({ path = currentPath(), query = currentQuery(), hash = currentHash() } = {}) => {
-      path = window.history.pushState({}, '', `${path}${(query && '?' + query) || ''}${(hash && '#' + hash) || ''}`);
-      window.dispatchEvent(new Event('location-changed'));
-      localStorage.setItem('location', currentHash());
-    };
-
-    /**
-     * Navigation handlers
-     *
-     * The 'forward' and 'backward' elements handle click events and navigate to the next/previous step/slide
-     */
-    this.$.forward.onclick = () => {
-      if (this.slides[this.currentSlide].steps && this.slides[this.currentSlide].step <= this.slides[this.currentSlide].steps) {
-        changeLocation({ hash: `slide-${this.currentSlide + 1}/step-${this.slides[this.currentSlide].step + 1}` });
-      } else if (this.currentSlide < this.slides.length - 1) {
-        changeLocation({ hash: `slide-${this.currentSlide + 2}/step-1` });
-      }
-    };
+#slides ::slotted([in=slide][previous].animate-backward) {
+  animation-name: slidem-slide-in-backward;
+  z-index: 3;
+}
 
-    this.$.backward.onclick = () => {
-      if (this.slides[this.currentSlide].steps && this.slides[this.currentSlide].step > 1) {
-        changeLocation({ hash: `slide-${this.currentSlide + 1}/step-${this.slides[this.currentSlide].step - 1}` });
-      } else if (this.currentSlide > 0) {
-        changeLocation({ hash: `slide-${this.currentSlide}/step-${(this.slides[this.currentSlide - 1].steps || 0) + 1}` });
-      }
-    };
-
-    /**
-     * Gesture navigation support system
-     *
-     * Allows swiping gestures to navigate between slides
-     * Listens to the 'touchstart' and 'touchend' events to determine if a swipe occurred
-     */
-    let touchX;
-    let touchY;
-    document.addEventListener(
-      'touchstart',
-      e => {
-        touchX = e.touches[0].clientX;
-        touchY = e.touches[0].clientY;
-      },
-      false
-    );
-    document.addEventListener(
-      'touchend',
-      e => {
-        const xMove = e.changedTouches[0].clientX - touchX;
-        const yMove = e.changedTouches[0].clientY - touchY;
-        if (Math.abs(xMove) > 60 && Math.abs(xMove) > Math.abs(yMove)) {
-          if (xMove < 0) {
-            this.$.forward.onclick();
-          } else {
-            this.$.backward.onclick();
-          }
-        }
-      },
-      false
-    );
-
-    /**
-     * Initialization function
-     *
-     * Displays the application
-     */
-    const init = () => {
-      this.removeAttribute('loading');
-      // Trigger the router to display the current page
-      window.dispatchEvent(new Event('location-changed'));
-    };
-
-    /**
-     * Font loading subsystem.
-     *
-     * It checks the 'font' attribute defined on slidem-deck, and the 'fonts' properties on
-     * all children that are custom elements (which could be custom slide elements).
-     *
-     * It feeds all these fonts to FontFaceObsever, and calls the 'init' function once all fonts
-     * are loaded, or after a 2 second timeout.
-     */
-    const font = this.getAttribute('font');
-    if (font) {
-      this.style.fontFamily = font;
-    }
+#slides ::slotted([out=slide][active].animate-backward) {
+  animation-name: slidem-slide-out-backward;
+}
 
-    // Promise that rejects after two seconds
-    let timeOut = new Promise((_, reject) => {
-      let wait = setTimeout(() => {
-        clearTimeout(wait);
-        reject('Font loading timeout');
-      }, 2000);
-    });
+#slides ::slotted([out=slide][previous].animate-forward) {
+  animation-name: slidem-slide-out-forward;
+  z-index: 3;
+}
+
+@keyframes slidem-fade-in {
+  from { opacity: 0; }
+  to { opacity: 1; }
+}
+
+@keyframes slidem-fade-out {
+  from { opacity: 1; }
+  to { opacity: 0; }
+}
+
+@keyframes slidem-slide-in-forward {
+  from { translate: 100vw 0; }
+  to { translate: 0 0; }
+}
+
+@keyframes slidem-slide-in-backward {
+  from { translate: 0 0; }
+  to { translate: 100vw 0; }
+}
 
-    // Wait until all child elements that are custom elements are registered in the customElements registry, or the timeOut happens
-    Promise.race([Promise.all(this.slides.map(slide => slide.tagName.includes('-') && customElements.whenDefined(slide.tagName.toLowerCase()))), timeOut])
-      // Then feed all the 'fonts'  defined in those elements and the font in the slidem-deck to FontFaceObserver
-      .then(() =>
-        Promise.race([
-          Promise.all(
-            this.slides
-              .filter(slide => slide.fonts)
-              .map(slide => slide.fonts)
-              .reduce((fonts, slideFonts) => fonts.concat(slideFonts), (font && [font]) || [])
-              .map(font => new FontFaceObserver(font).load())
-          ),
-          timeOut
-        ])
-      )
-      // Once FontFaceObserver for all fonts is complete or the timeout happens, call init()
-      .then(init, () => console.warn('Failed to initialize fonts') || init());
-
-    /**
-     * Shared navigation between browser windows
-     *
-     * Uses the browser localstorage feature to listen to changes in 'location' on any other open browser window,
-     * and matches that location in this instance
-     */
-    window.addEventListener('storage', e => {
-      if (e.key === 'location') {
-        if (currentHash() !== e.newValue) {
-          changeLocation({ hash: `${e.newValue}` });
+@keyframes slidem-slide-out-forward {
+  from { translate: 0 0; }
+  to { translate: -100vw 0; }
+}
+
+@keyframes slidem-slide-out-backward {
+  from { translate: -100vw 0; }
+  to { translate: 0 0; }
+}
+
+`);
+var slidem_deck_default = sheet2;
+
+// html-template:/home/bennyp/Developer/slidem/src/slidem-deck.html
+var template = document.createElement("template");
+template.innerHTML = `<div id="slides" part="slides">
+  <slot></slot>
+</div>
+
+<div id="progress" part="progress">
+  <slot name="progress" id="progressSlot"></slot>
+</div>
+
+<div id="notes" part="notes">
+  <slot name="notes"></slot>
+</div>
+
+<div id="timer" part="timer"></div>
+
+<div id="forward">
+  <slot name="forward"></slot>
+</div>
+
+<div id="backward">
+  <slot name="backward"></slot>
+</div>
+`;
+var slidem_deck_default2 = template;
+
+// src/slidem-deck.js
+document.adoptedStyleSheets = [...document.adoptedStyleSheets, slidem_deck_global_default];
+var STATE_RE = /^#(?:slide-(?<slide>\d+))?(?:\/step-(?<step>\d+|Infinity))?/;
+var _instances, _timer, _changeLocation, changeLocation_fn, _timerInterval, _originalTitle, _$$, $$_fn, _init, init_fn, _untilDefined, untilDefined_fn, _onKeyup, onKeyup_fn, _updateTitle, updateTitle_fn, _onRouteChange, onRouteChange_fn, _updateNotes, updateNotes_fn;
+var _SlidemDeck = class extends HTMLElement {
+  constructor() {
+    super();
+    __privateAdd(this, _$$);
+    __privateAdd(this, _init);
+    __privateAdd(this, _untilDefined);
+    __privateAdd(this, _onKeyup);
+    __privateAdd(this, _updateTitle);
+    __privateAdd(this, _onRouteChange);
+    __privateAdd(this, _updateNotes);
+    __privateAdd(this, _timerInterval, void 0);
+    __privateAdd(this, _originalTitle, document.title);
+    __publicField(this, "previousSlideIndex");
+    __publicField(this, "nextSlide");
+    __publicField(this, "slides");
+    this.attachShadow({ mode: "open" }).append(slidem_deck_default2.content.cloneNode(true));
+    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, slidem_deck_default];
+    this.presenter = new URLSearchParams(location.search).has("presenter");
+  }
+  static initListeners() {
+    function notify(e) {
+      __privateGet(_SlidemDeck, _instances).forEach((i) => {
+        var _a;
+        return __privateMethod(_a = i, _onRouteChange, onRouteChange_fn).call(_a, e);
+      });
+    }
+    addEventListener("hashchange", notify);
+    addEventListener("location-changed", notify);
+    addEventListener("popstate", notify);
+    addEventListener("storage", ({ key, newValue }) => {
+      if (key === "location") {
+        if (location.hash !== newValue) {
+          __privateMethod(this, _changeLocation, changeLocation_fn).call(this, { hash: `${newValue}` });
         }
       }
     });
+    addEventListener("keyup", (e) => __privateGet(_SlidemDeck, _instances).forEach((i) => {
+      var _a;
+      return __privateMethod(_a = i, _onKeyup, onKeyup_fn).call(_a, e);
+    }));
+    let touchX;
+    let touchY;
+    document.addEventListener("touchstart", ({ touches: [{ clientX, clientY }] }) => {
+      touchX = clientX;
+      touchY = clientY;
+    }, false);
+    document.addEventListener("touchend", (e) => {
+      const xMove = e.changedTouches[0].clientX - touchX;
+      const yMove = e.changedTouches[0].clientY - touchY;
+      if (Math.abs(xMove) > 60 && Math.abs(xMove) > Math.abs(yMove))
+        __privateGet(this, _instances).forEach((i) => xMove < 0 ? i.forward() : i.back());
+    }, false);
+  }
+  get state() {
+    return location.hash.match(STATE_RE)?.groups ?? { slide: 1, step: 1 };
+  }
+  set state(state) {
+    var _a;
+    const { state: old } = this;
+    if (state.slide === old.slide && state.step === old.step)
+      return;
+    state.step ??= old.step;
+    state.slide ??= old.slide;
+    const hash = `#slide-${state.slide}/step-${state.step}`;
+    __privateMethod(_a = _SlidemDeck, _changeLocation, changeLocation_fn).call(_a, { hash });
+  }
+  get currentStepIndex() {
+    return this.state.step - 1;
+  }
+  get currentSlideIndex() {
+    return this.state.slide - 1;
+  }
+  get presenter() {
+    return this.hasAttribute("presenter");
+  }
+  set presenter(value) {
+    this.toggleAttribute("presenter", !!value);
+  }
+  get previousSlide() {
+    return this.slides?.[this.currentSlideIndex - 1] ?? null;
   }
-
   get currentSlide() {
-    return (currentHash().match(/(?:slide-(\d+))?(?:\/step-(\d+|Infinity))?/)[1] || 1) - 1;
+    return this.slides?.[this.currentSlideIndex] ?? null;
   }
-  get currentStep() {
-    return (currentHash().match(/(?:slide-(\d+))?(?:\/step-(\d+|Infinity))?/)[2] || 1) - 1;
+  get $() {
+    return Object.fromEntries(Array.from(__privateMethod(this, _$$, $$_fn).call(this, "[id]"), (el) => [el.id, el]));
   }
-}
-
-// Returns a string representing elapsed time since 'begin'
-const __timer = begin => {
+  connectedCallback() {
+    __privateGet(_SlidemDeck, _instances).add(this);
+    this.slides = Array.from(this.children).filter((item) => !item.hasAttribute("slot"));
+    this.slides.forEach((slide, i) => {
+      this.$.progressSlot.appendChild(document.createElement("div"));
+      slide.querySelectorAll('[slot="notes"]').forEach((note) => {
+        note.setAttribute("slide", i + 1);
+        this.appendChild(note);
+      });
+    });
+    this.$.forward.addEventListener("click", () => this.forward());
+    this.$.backward.addEventListener("click", () => this.back());
+    __privateMethod(this, _init, init_fn).call(this);
+  }
+  disconnectedCallback() {
+    __privateGet(_SlidemDeck, _instances).delete(this);
+  }
+  forward() {
+    if (this.currentSlide.steps && this.currentSlide.step <= this.currentSlide.steps) {
+      this.state = { slide: this.currentSlideIndex + 1, step: this.currentSlide.step + 1 };
+    } else if (this.currentSlideIndex < this.slides.length - 1) {
+      this.state = { slide: this.currentSlideIndex + 2, step: 1 };
+    }
+  }
+  back() {
+    if (this.currentSlide.steps && this.currentSlide.step > 1) {
+      this.state = { slide: this.currentSlideIndex + 1, step: this.currentSlide.step - 1 };
+    } else if (this.currentSlideIndex > 0) {
+      this.state = { slide: this.currentSlideIndex, step: this.slides[this.currentSlideIndex - 1].steps + 1 };
+    }
+  }
+  togglePresenter() {
+    var _a;
+    this.presenter = !this.presenter;
+    __privateMethod(_a = _SlidemDeck, _changeLocation, changeLocation_fn).call(_a, { search: this.presenter ? "?presenter" : "" });
+  }
+  toggleTimer() {
+    if (__privateGet(this, _timerInterval)) {
+      clearInterval(__privateGet(this, _timerInterval));
+      __privateSet(this, _timerInterval, void 0);
+      this.$.timer.innerText = "";
+    } else {
+      this.$.timer.innerText = "00:00";
+      let begin = new Date();
+      __privateSet(this, _timerInterval, setInterval(() => {
+        var _a;
+        return this.$.timer.innerText = __privateGet(_a = _SlidemDeck, _timer).call(_a, begin);
+      }, 1e3));
+    }
+  }
+};
+var SlidemDeck = _SlidemDeck;
+_instances = new WeakMap();
+_timer = new WeakMap();
+_changeLocation = new WeakSet();
+changeLocation_fn = function({ search = location.search, hash = location.hash } = {}) {
+  const url = new URL(location.href);
+  url.search = new URLSearchParams(search).toString();
+  url.hash = hash;
+  history.pushState({}, "", url.toString());
+  dispatchEvent(new Event("location-changed"));
+  localStorage.setItem("location", location.hash);
+  __privateGet(_SlidemDeck, _instances).forEach((i) => {
+    var _a;
+    return __privateMethod(_a = i, _updateTitle, updateTitle_fn).call(_a);
+  });
+};
+_timerInterval = new WeakMap();
+_originalTitle = new WeakMap();
+_$$ = new WeakSet();
+$$_fn = function(selector) {
+  return this.shadowRoot.querySelectorAll(selector);
+};
+_init = new WeakSet();
+init_fn = async function() {
+  if (this.getAttribute("font"))
+    this.style.fontFamily = this.getAttribute("font");
+  await Promise.race([
+    __privateMethod(this, _untilDefined, untilDefined_fn).call(this),
+    document.fonts.ready,
+    new Promise((r) => void setTimeout(r, 2e3))
+  ]);
+  await document.fonts.ready;
+  await new Promise(requestAnimationFrame);
+  this.removeAttribute("loading");
+  __privateMethod(this, _onRouteChange, onRouteChange_fn).call(this);
+};
+_untilDefined = new WeakSet();
+untilDefined_fn = async function() {
+  await Promise.all(this.slides.filter((slide) => slide.localName.includes("-")).map((slide) => customElements.whenDefined(slide.localName)));
+};
+_onKeyup = new WeakSet();
+onKeyup_fn = function({ key }) {
+  switch (key) {
+    case "PageDown":
+    case "ArrowRight":
+    case "j":
+    case "l":
+      return this.forward();
+    case "PageUp":
+    case "ArrowLeft":
+    case "h":
+    case "k":
+      return this.back();
+    case "t":
+      return this.presenter && this.toggleTimer();
+    case "p":
+      return this.togglePresenter();
+  }
+};
+_updateTitle = new WeakSet();
+updateTitle_fn = function() {
+  if (this.currentSlide.hasAttribute("name"))
+    document.title = this.currentSlide.getAttribute("name") + " | " + __privateGet(this, _originalTitle);
+  else
+    document.title = __privateGet(this, _originalTitle);
+};
+_onRouteChange = new WeakSet();
+onRouteChange_fn = function() {
+  this.currentSlide.step = this.currentStepIndex + 1;
+  this.currentSlide.setAttribute("active", "");
+  if (this.presenter)
+    __privateMethod(this, _updateNotes, updateNotes_fn).call(this);
+  if (this.previousSlideIndex === this.currentSlideIndex)
+    return;
+  if (this.autoTimer)
+    clearInterval(this.autoTimer);
+  if (this.currentSlide.auto) {
+    this.autoTimer = setInterval(() => {
+      const { steps, step } = this.currentSlide;
+      this.currentSlide.step = step === steps + 1 ? 1 : step + 1;
+    }, this.currentSlide.auto);
+  }
+  if (this.previousSlideIndex !== void 0) {
+    if (this.previousSlideIndex < this.currentSlideIndex) {
+      this.slides[this.previousSlideIndex].classList.add("animate-forward");
+      this.currentSlide.classList.add("animate-forward");
+      this.slides[this.previousSlideIndex].classList.remove("animate-backward");
+      this.currentSlide.classList.remove("animate-backward");
+    } else {
+      this.slides[this.previousSlideIndex].classList.add("animate-backward");
+      this.currentSlide.classList.add("animate-backward");
+      this.slides[this.previousSlideIndex].classList.remove("animate-forward");
+      this.currentSlide.classList.remove("animate-forward");
+    }
+  }
+  if (this.oldNextSlide !== void 0)
+    this.slides[this.oldNextSlide].removeAttribute("next");
+  const nextIndex = this.currentSlideIndex + 1;
+  this.nextSlide = this.slides[nextIndex] ? nextIndex : void 0;
+  if (this.nextSlide !== void 0) {
+    this.slides[this.nextSlide].setAttribute("next", "");
+    this.oldNextSlide = this.nextSlide;
+  }
+  if (this.oldPreviousSlide !== void 0)
+    this.slides[this.oldPreviousSlide].removeAttribute("previous");
+  if (this.previousSlideIndex !== void 0) {
+    this.slides[this.previousSlideIndex].removeAttribute("active");
+    this.slides[this.previousSlideIndex].setAttribute("previous", "");
+    this.$.progressSlot.children[this.previousSlideIndex].classList.remove("active");
+    this.oldPreviousSlide = this.previousSlideIndex;
+  }
+  this.$.progressSlot.children[this.currentSlideIndex].classList.add("active");
+  this.previousSlideIndex = this.currentSlideIndex;
+  this.dispatchEvent(new Event("change"));
+};
+_updateNotes = new WeakSet();
+updateNotes_fn = function() {
+  for (const note of this.$.notes.querySelector("slot").assignedElements())
+    note.toggleAttribute("active", note.getAttribute("slide") == this.currentSlideIndex + 1);
+};
+__privateAdd(SlidemDeck, _changeLocation);
+__publicField(SlidemDeck, "is", "slidem-deck");
+__privateAdd(SlidemDeck, _instances, /* @__PURE__ */ new Set());
+__privateAdd(SlidemDeck, _timer, (begin) => {
   const time = new Date(new Date() - begin);
-  const pad = t => (t < 10 && '0' + t) || t;
+  const pad = (t) => t < 10 && "0" + t || t;
   const hours = pad(time.getUTCHours());
   const minutes = pad(time.getUTCMinutes());
   const seconds = pad(time.getUTCSeconds());
-  return `${(time.getUTCHours() && hours + ':') || ''}${minutes}:${seconds}`;
-};
-
+  return `${time.getUTCHours() && hours + ":" || ""}${minutes}:${seconds}`;
+});
+SlidemDeck.initListeners();
 customElements.define(SlidemDeck.is, SlidemDeck);
+export {
+  SlidemDeck
+};
+//# sourceMappingURL=slidem-deck.js.map
diff --git a/node_modules/slidem/slidem-deck.js.map b/node_modules/slidem/slidem-deck.js.map
new file mode 100644
index 0000000..6994c11
--- /dev/null
+++ b/node_modules/slidem/slidem-deck.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "sources": ["assert-css:/home/bennyp/Developer/slidem/src/slidem-deck-global.css", "assert-css:/home/bennyp/Developer/slidem/src/slidem-deck.css", "html-template:/home/bennyp/Developer/slidem/src/slidem-deck.html", "src/slidem-deck.js"],
+  "sourcesContent": ["const sheet = new CSSStyleSheet(); sheet.replace(`/* SLIDEM GLOBAL STYLES */\nbody {\n  margin: 0;\n}\n\nslidem-deck [reveal] {\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n/* SLIDEM SLIDE GLOBAL STYLES */\n\nslidem-deck [reveal] {\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\nslidem-deck [current],\nslidem-deck [past] {\n  opacity: 1;\n}\n/* SLIDEM BASIC SLIDE STYLE */\nslidem-slide h1,\nslidem-slide h2,\nslidem-slide h3,\nslidem-slide h4,\nslidem-slide h5,\nslidem-slide h6,\nslidem-slide p {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\nslidem-slide a {\n  color: inherit;\n  text-decoration: none;\n}\n\n/* Keyframes are defined here to patch a scoping bug in Chrome */\n@keyframes slidem-fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slidem-fade-out {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n@keyframes slidem-slide-in-forward {\n  from { translate: 100vw 0; }\n  to { translate: 0 0; }\n}\n\n@keyframes slidem-slide-in-backward {\n  from { translate: 0 0; }\n  to { translate: 100vw 0; }\n}\n\n@keyframes slidem-slide-out-forward {\n  from { translate: 0 0; }\n  to { translate: -100vw 0; }\n}\n\n@keyframes slidem-slide-out-backward {\n  from { translate: -100vw 0; }\n  to { translate: 0 0; }\n}\n\n`);export default sheet;", "const sheet = new CSSStyleSheet(); sheet.replace(`:host {\n  /* inset for active slide */\n  --active-inset-block-start: calc(25% - 20px);\n  --active-inset-block-end: calc(25% - 20px);\n  --active-inset-inline-start: calc(5% - 20px);\n  --active-inset-inline-end: calc(45% - 20px);\n\n  /* inset for next slide */\n  --presenter-inset-block-start: calc(32.5% - 20px);\n  --presenter-inset-block-end: calc(32.5% - 20px);\n  --presenter-inset-inline-start: calc(60.5% - 20px);\n  --presenter-inset-inline-end: calc(4.5% - 20px);\n}\n\n:host {\n  display: block;\n  overflow: hidden;\n  position: absolute;\n  inset: 0 0 0 0;\n  font-family: 'sans-serif';\n  font-size: 56px;\n  line-height: 1;\n}\n\n#slides ::slotted(*) {\n  position: absolute;\n  inset: 0 0 0 0;\n  animation-duration: 0.4s;\n  animation-fill-mode: both;\n  animation-timing-function: ease-in-out;\n}\n\n#slides ::slotted(:not([active]):not([previous]):not([next])) {\n  display: none;\n}\n\n:host(:not([presenter])) #slides ::slotted([next]:not([previous])) {\n  display: none;\n}\n\n#progress {\n  position: absolute;\n  inset-block-end: 0;\n  inset-inline-start: 0;\n  inset-inline-end: 0;\n  height: 50px;\n  text-align: center;\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n  z-index: 10;\n}\n\n#progress div {\n  height: 8px;\n  width: 8px;\n  border-radius: 50%;\n  border: 2px solid white;\n  margin-left: 6px;\n  margin-right: 6px;\n  background: transparent;\n  transition: background 0.2s, scale 0.2s;\n}\n\n#progress div.active {\n  background: white;\n  scale: 1.3\n}\n\n:host([progress=\"dark\"]) #progress div {\n  border: 2px solid black;\n}\n\n:host([progress=\"dark\"]) #progress div.active {\n  background: black;\n}\n\n:host([progress=\"none\"]) #progress {\n  display: none;\n}\n\n#timer {\n  display: none;\n  position: absolute;\n  inset-block-start: 5%;\n  inset-inline-end: 5%;\n  color: white;\n  font-size: 4vw;\n  font-weight: bold;\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n:host([presenter]) #timer {\n  display: inline;\n}\n\n:host([presenter]) {\n  background: black;\n}\n\n/* White box around active slide */\n:host([presenter])::before,\n:host([presenter])::after {\n  display: block;\n  position: absolute;\n  content: '';\n  border: 2px solid white;\n}\n\n:host([presenter])::before {\n  inset-block: var(--active-inset-block-start) var(--active-inset-block-end);\n  inset-inline: var(--active-inset-inline-start) var(--active-inset-inline-end);\n}\n\n/* White box around next slide */\n:host([presenter])::after {\n  inset-block: var(--presenter-inset-block-start) var(--presenter-inset-block-end);\n  inset-inline: var(--presenter-inset-inline-start) var(--presenter-inset-inline-end);\n}\n\n:host([presenter]) #slides ::slotted(*) {\n  animation: none !important; /* Block user-configured animations */\n}\n\n:host([presenter]) #slides ::slotted([previous]:not([next])) {\n  display: none;\n}\n\n:host([presenter]) #slides ::slotted([active]) {\n  translate: -20% 0;\n  scale: 0.5 !important; /* Force presenter layout */\n}\n\n:host([presenter]) #slides ::slotted([next]) {\n  translate: 28% 0;\n  scale: 0.35 !important; /* Force presenter layout */\n}\n\n:host([presenter]) #progress {\n  translate: -20% 25vh;\n  scale: 0.5;\n}\n\n#notes {\n  font-size: 18px;\n  position: absolute;\n  inset-block-start: calc(var(--presenter-inset-block-start) + var(--presenter-inset-block-end) + 80px);\n  inset-inline-start: var(--presenter-inset-inline-start);\n}\n\n:host(:not([presenter])) #notes,\n#notes ::slotted(:not([active])) {\n  display: none !important;\n}\n\n#slides ::slotted([active]) {\n  z-index: 2;\n}\n\n#slides ::slotted([previous]) {\n  z-index: 0;\n}\n\n#slides ::slotted([in=fade][active].animate-forward) {\n  animation-name: slidem-fade-in;\n}\n\n#slides ::slotted([in=fade][previous].animate-backward) {\n  animation-name: slidem-fade-out;\n  z-index: 3;\n}\n\n#slides ::slotted([out=fade][active].animate-backward) {\n  animation-name: slidem-fade-in;\n}\n\n#slides ::slotted([out=fade][previous].animate-forward) {\n  animation-name: slidem-fade-out;\n  z-index: 3;\n}\n\n#slides ::slotted([in=slide][active].animate-forward) {\n  animation-name: slidem-slide-in-forward;\n}\n\n#slides ::slotted([in=slide][previous].animate-backward) {\n  animation-name: slidem-slide-in-backward;\n  z-index: 3;\n}\n\n#slides ::slotted([out=slide][active].animate-backward) {\n  animation-name: slidem-slide-out-backward;\n}\n\n#slides ::slotted([out=slide][previous].animate-forward) {\n  animation-name: slidem-slide-out-forward;\n  z-index: 3;\n}\n\n@keyframes slidem-fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slidem-fade-out {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n@keyframes slidem-slide-in-forward {\n  from { translate: 100vw 0; }\n  to { translate: 0 0; }\n}\n\n@keyframes slidem-slide-in-backward {\n  from { translate: 0 0; }\n  to { translate: 100vw 0; }\n}\n\n@keyframes slidem-slide-out-forward {\n  from { translate: 0 0; }\n  to { translate: -100vw 0; }\n}\n\n@keyframes slidem-slide-out-backward {\n  from { translate: -100vw 0; }\n  to { translate: 0 0; }\n}\n\n`);export default sheet;", "  const template = document.createElement('template');\n  template.innerHTML = `<div id=\"slides\" part=\"slides\">\n  <slot></slot>\n</div>\n\n<div id=\"progress\" part=\"progress\">\n  <slot name=\"progress\" id=\"progressSlot\"></slot>\n</div>\n\n<div id=\"notes\" part=\"notes\">\n  <slot name=\"notes\"></slot>\n</div>\n\n<div id=\"timer\" part=\"timer\"></div>\n\n<div id=\"forward\">\n  <slot name=\"forward\"></slot>\n</div>\n\n<div id=\"backward\">\n  <slot name=\"backward\"></slot>\n</div>\n`;\n  export default template;", "import globalStyle from './slidem-deck-global.css' assert { type: 'css' };\nimport shadowStyle from './slidem-deck.css' assert { type: 'css' };\nimport template from './slidem-deck.html' assert { type: 'html-template' };\n\ndocument.adoptedStyleSheets = [...document.adoptedStyleSheets, globalStyle];\n/**\n * **START**\n * `#`\n * non-capturing group (_optional_):\n *   `slide-`\n *   named capture group 1 `slide`:\n *     **0-9** (_>= 1x_)\n * non-capturing group (_optional_):\n *   `/step-`\n *   named capture group 2 `step`:\n *     Either **0-9** (_>= 1x_) or `Infinity`\n */\nconst STATE_RE = /^#(?:slide-(?<slide>\\d+))?(?:\\/step-(?<step>\\d+|Infinity))?/;\n\nexport class SlidemDeck extends HTMLElement {\n  static is = 'slidem-deck';\n\n  static #instances = new Set();\n\n  // Returns a string representing elapsed time since 'begin'\n  static #timer = begin => {\n    const time = new Date(new Date() - begin);\n    const pad = t => (t < 10 && '0' + t) || t;\n    const hours = pad(time.getUTCHours());\n    const minutes = pad(time.getUTCMinutes());\n    const seconds = pad(time.getUTCSeconds());\n    return `${(time.getUTCHours() && hours + ':') || ''}${minutes}:${seconds}`;\n  };\n\n  static #changeLocation({ search = location.search, hash = location.hash } = {}) {\n    const url = new URL(location.href);\n          url.search = new URLSearchParams(search).toString();\n          url.hash = hash;\n    history.pushState({}, '', url.toString());\n    dispatchEvent(new Event('location-changed'));\n    localStorage.setItem('location', location.hash);\n    SlidemDeck.#instances.forEach(i => i.#updateTitle());\n  };\n\n  static initListeners() {\n    function notify(e) { SlidemDeck.#instances.forEach(i => i.#onRouteChange(e)); }\n    addEventListener('hashchange', notify);\n    addEventListener('location-changed', notify);\n    addEventListener('popstate', notify);\n\n    /**\n     * Shared navigation between browser windows\n     *\n     * Uses the browser localstorage feature to listen to changes in 'location' on any other open browser window,\n     * and matches that location in this instance\n     */\n    addEventListener('storage', ({ key, newValue }) => {\n      if (key === 'location') {\n        if (location.hash !== newValue) {\n          this.#changeLocation({ hash: `${newValue}` });\n        }\n      }\n    });\n\n    addEventListener('keyup', e => SlidemDeck.#instances.forEach(i => i.#onKeyup(e)));\n\n    /**\n     * Gesture navigation support system\n     *\n     * Allows swiping gestures to navigate between slides\n     * Listens to the 'touchstart' and 'touchend' events to determine if a swipe occurred\n     */\n    let touchX;\n    let touchY;\n\n    document.addEventListener('touchstart', ({ touches: [{ clientX, clientY }] }) => {\n      touchX = clientX;\n      touchY = clientY;\n    }, false);\n\n    document.addEventListener('touchend', e => {\n      const xMove = e.changedTouches[0].clientX - touchX;\n      const yMove = e.changedTouches[0].clientY - touchY;\n      if (Math.abs(xMove) > 60 && Math.abs(xMove) > Math.abs(yMove))\n        this.#instances.forEach(i => xMove < 0 ? i.forward() : i.back());\n    }, false);\n  }\n\n  #timerInterval;\n\n  // cache the document title\n  #originalTitle = document.title;\n\n  get state() { return location.hash.match(STATE_RE)?.groups ?? { slide: 1, step: 1 }; }\n  set state(state) {\n    const { state: old } = this;\n    if (state.slide === old.slide && state.step === old.step) return;\n    state.step ??= old.step;\n    state.slide ??= old.slide;\n    const hash = `#slide-${state.slide}/step-${state.step}`;\n    SlidemDeck.#changeLocation({ hash });\n  }\n\n  get currentStepIndex() { return this.state.step - 1; }\n  get currentSlideIndex() { return this.state.slide - 1; }\n  previousSlideIndex;\n\n  get presenter() { return this.hasAttribute('presenter'); }\n  set presenter(value) { this.toggleAttribute('presenter', !!value); }\n\n  get previousSlide() { return this.slides?.[this.currentSlideIndex - 1] ?? null; }\n  get currentSlide() { return this.slides?.[this.currentSlideIndex] ?? null; }\n  nextSlide;\n\n  #$$(selector) { return this.shadowRoot.querySelectorAll(selector); }\n  get $() { return Object.fromEntries(Array.from(this.#$$('[id]'), el => [el.id, el])); }\n\n  slides;\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).append(template.content.cloneNode(true));\n    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, shadowStyle];\n    // Initialize presenter mode based on the '?presenter' query being present\n    this.presenter = new URLSearchParams(location.search).has('presenter');\n  }\n\n  connectedCallback() {\n    SlidemDeck.#instances.add(this);\n    this.slides = Array.from(this.children).filter(item => !item.hasAttribute('slot'));\n    // Create dots for progress bar\n    this.slides.forEach((slide, i) => {\n      this.$.progressSlot.appendChild(document.createElement('div'));\n      slide.querySelectorAll('[slot=\"notes\"]').forEach(note => {\n        note.setAttribute('slide', i + 1);\n        this.appendChild(note);\n      });\n    });\n\n    /**\n     * Navigation handlers\n     *\n     * The 'forward' and 'backward' elements handle click events and navigate to the next/previous step/slide\n     */\n    this.$.forward.addEventListener('click', () => this.forward());\n    this.$.backward.addEventListener('click', () => this.back());\n    this.#init();\n  }\n\n  disconnectedCallback() {\n    SlidemDeck.#instances.delete(this);\n  }\n\n  /**\n   * Font loading subsystem.\n   *\n   * It checks the 'font' attribute defined on slidem-deck, and the 'fonts' properties on\n   * all children that are custom elements (which could be custom slide elements).\n   *\n   * It calls the 'init' function once all fonts are loaded, or after a 2 second timeout.\n   */\n  async #init() {\n    if (this.getAttribute('font'))\n      this.style.fontFamily = this.getAttribute('font');\n\n    // Wait until all child elements that are custom elements are registered in the customElements registry, or the timeOut happens\n    await Promise.race([\n      this.#untilDefined(),\n      document.fonts.ready,\n      new Promise(r => void setTimeout(r, 2000)),\n    ]);\n\n    await document.fonts.ready;\n    await new Promise(requestAnimationFrame);\n    this.removeAttribute('loading');\n    this.#onRouteChange();\n  }\n\n  async #untilDefined() {\n    await Promise.all(this.slides\n      .filter(slide => slide.localName.includes('-'))\n      .map(slide => customElements.whenDefined(slide.localName)));\n  }\n\n  #onKeyup({ key }) {\n    switch (key) {\n      case 'PageDown':\n      case 'ArrowRight':\n      case 'j':\n      case 'l':\n        return this.forward();\n      case 'PageUp':\n      case 'ArrowLeft':\n      case 'h':\n      case 'k':\n        return this.back();\n      case 't':\n        return this.presenter && this.toggleTimer();\n      case 'p':\n        return this.togglePresenter();\n    }\n  }\n\n  #updateTitle() {\n    if (this.currentSlide.hasAttribute('name'))\n      document.title = this.currentSlide.getAttribute('name') + ' | ' + this.#originalTitle;\n    else\n      document.title = this.#originalTitle;\n  }\n\n  /**\n   * Routing system\n   *\n   * Handles route changes and displays / animates the slides by changing classes and attributes\n   */\n  #onRouteChange() {\n    this.currentSlide.step = this.currentStepIndex + 1;\n    this.currentSlide.setAttribute('active', '');\n\n    if (this.presenter)\n      this.#updateNotes();\n\n    if (this.previousSlideIndex === this.currentSlideIndex)\n      return;\n\n    if (this.autoTimer)\n      clearInterval(this.autoTimer);\n\n    if (this.currentSlide.auto) {\n      this.autoTimer = setInterval(() => {\n        const { steps, step } = this.currentSlide;\n        this.currentSlide.step = (step === steps + 1) ? 1 : step + 1;\n      }, this.currentSlide.auto);\n    }\n\n    if (this.previousSlideIndex !== undefined) {\n      if (this.previousSlideIndex < this.currentSlideIndex) {\n        this.slides[this.previousSlideIndex].classList.add('animate-forward');\n        this.currentSlide.classList.add('animate-forward');\n        this.slides[this.previousSlideIndex].classList.remove('animate-backward');\n        this.currentSlide.classList.remove('animate-backward');\n      } else {\n        this.slides[this.previousSlideIndex].classList.add('animate-backward');\n        this.currentSlide.classList.add('animate-backward');\n        this.slides[this.previousSlideIndex].classList.remove('animate-forward');\n        this.currentSlide.classList.remove('animate-forward');\n      }\n    }\n\n    if (this.oldNextSlide !== undefined)\n      this.slides[this.oldNextSlide].removeAttribute('next');\n\n    const nextIndex = this.currentSlideIndex + 1;\n    this.nextSlide = this.slides[nextIndex] ? nextIndex : undefined;\n\n    if (this.nextSlide !== undefined) {\n      this.slides[this.nextSlide].setAttribute('next', '');\n      this.oldNextSlide = this.nextSlide;\n    }\n\n    if (this.oldPreviousSlide !== undefined)\n      this.slides[this.oldPreviousSlide].removeAttribute('previous');\n\n    if (this.previousSlideIndex !== undefined) {\n      this.slides[this.previousSlideIndex].removeAttribute('active');\n      this.slides[this.previousSlideIndex].setAttribute('previous', '');\n      this.$.progressSlot.children[this.previousSlideIndex].classList.remove('active');\n      this.oldPreviousSlide = this.previousSlideIndex;\n    }\n\n    this.$.progressSlot.children[this.currentSlideIndex].classList.add('active');\n\n    this.previousSlideIndex = this.currentSlideIndex;\n    this.dispatchEvent(new Event('change'));\n  }\n\n  /** set the `active` attr on any notes for this slide */\n  #updateNotes() {\n    for (const note of this.$.notes.querySelector('slot').assignedElements())\n      note.toggleAttribute('active', note.getAttribute('slide') == this.currentSlideIndex + 1);\n  }\n\n  forward() {\n    if (this.currentSlide.steps && this.currentSlide.step <= this.currentSlide.steps) {\n      this.state = { slide: this.currentSlideIndex + 1, step: this.currentSlide.step + 1 };\n    } else if (this.currentSlideIndex < this.slides.length - 1) {\n      this.state = { slide: this.currentSlideIndex + 2, step: 1 };\n    }\n  }\n\n  back() {\n    if (this.currentSlide.steps && this.currentSlide.step > 1) {\n      this.state = { slide: this.currentSlideIndex + 1, step: this.currentSlide.step - 1 };\n    } else if (this.currentSlideIndex > 0) {\n      this.state = { slide: this.currentSlideIndex, step: this.slides[this.currentSlideIndex - 1].steps + 1 };\n    }\n  }\n\n  togglePresenter() {\n    this.presenter = !this.presenter;\n    SlidemDeck.#changeLocation({ search: this.presenter ? '?presenter' : '' });\n  }\n\n  toggleTimer() {\n    if (this.#timerInterval) {\n      clearInterval(this.#timerInterval);\n      this.#timerInterval = undefined;\n      this.$.timer.innerText = '';\n    } else {\n      this.$.timer.innerText = '00:00';\n      let begin = new Date();\n      this.#timerInterval = setInterval(() => (this.$.timer.innerText = SlidemDeck.#timer(begin)), 1000);\n    }\n  }\n}\n\nSlidemDeck.initListeners();\n\ncustomElements.define(SlidemDeck.is, SlidemDeck);\n\n\n"],
+  "mappings": "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",
+  "names": ["sheet", "slidem_deck_default", "slidem_deck_default"]
+}
diff --git a/node_modules/slidem/slidem-deck.umd.js b/node_modules/slidem/slidem-deck.umd.js
deleted file mode 100644
index 3282899..0000000
--- a/node_modules/slidem/slidem-deck.umd.js
+++ /dev/null
@@ -1,255 +0,0 @@
-!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("../node_modules/@gluon/gluon/gluon.js")):"function"==typeof define&&define.amd?define(["exports","../node_modules/@gluon/gluon/gluon.js"],t):t((e=e||self).slidem={},e.GluonJS)}(this,(function(e,t){"use strict";let i=!1;const s=[],n=()=>{s.forEach(e=>e(o(),r(),a()))},o=()=>window.decodeURIComponent(window.location.pathname),r=()=>window.location.search.slice(1),a=()=>window.decodeURIComponent(window.location.hash.slice(1));!function(){function e(e,t){document.addEventListener?e.addEventListener("scroll",t,!1):e.attachEvent("scroll",t)}function t(e){this.a=document.createElement("div"),this.a.setAttribute("aria-hidden","true"),this.a.appendChild(document.createTextNode(e)),this.b=document.createElement("span"),this.c=document.createElement("span"),this.h=document.createElement("span"),this.f=document.createElement("span"),this.g=-1,this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;",this.b.appendChild(this.h),this.c.appendChild(this.f),this.a.appendChild(this.b),this.a.appendChild(this.c)}function i(e,t){e.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+t+";"}function s(e){var t=e.a.offsetWidth,i=t+100;return e.f.style.width=i+"px",e.c.scrollLeft=i,e.b.scrollLeft=e.b.scrollWidth+100,e.g!==t&&(e.g=t,!0)}function n(t,i){function n(){var e=o;s(e)&&e.a.parentNode&&i(e.g)}var o=t;e(t.b,n),e(t.c,n),s(t)}function o(e,t){var i=t||{};this.family=e,this.style=i.style||"normal",this.weight=i.weight||"normal",this.stretch=i.stretch||"normal"}var r=null,a=null,d=null,l=null;function c(){return null===l&&(l=!!document.fonts),l}function h(){if(null===d){var e=document.createElement("div");try{e.style.font="condensed 100px sans-serif"}catch(e){}d=""!==e.style.font}return d}function u(e,t){return[e.style,e.weight,h()?e.stretch:"","100px",t].join(" ")}o.prototype.load=function(e,s){var o=this,d=e||"BESbswy",l=0,h=s||3e3,m=(new Date).getTime();return new Promise((function(e,s){if(c()&&!function(){if(null===a)if(c()&&/Apple/.test(window.navigator.vendor)){var e=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);a=!!e&&603>parseInt(e[1],10)}else a=!1;return a}()){var p=new Promise((function(e,t){!function i(){(new Date).getTime()-m>=h?t(Error(h+"ms timeout exceeded")):document.fonts.load(u(o,'"'+o.family+'"'),d).then((function(t){1<=t.length?e():setTimeout(i,25)}),t)}()})),f=new Promise((function(e,t){l=setTimeout((function(){t(Error(h+"ms timeout exceeded"))}),h)}));Promise.race([f,p]).then((function(){clearTimeout(l),e(o)}),s)}else!function(e){document.body?e():document.addEventListener?document.addEventListener("DOMContentLoaded",(function t(){document.removeEventListener("DOMContentLoaded",t),e()})):document.attachEvent("onreadystatechange",(function t(){"interactive"!=document.readyState&&"complete"!=document.readyState||(document.detachEvent("onreadystatechange",t),e())}))}((function(){function a(){var t;(t=-1!=v&&-1!=g||-1!=v&&-1!=w||-1!=g&&-1!=w)&&((t=v!=g&&v!=w&&g!=w)||(null===r&&(t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),r=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))),t=r&&(v==y&&g==y&&w==y||v==b&&g==b&&w==b||v==k&&g==k&&w==k)),t=!t),t&&(x.parentNode&&x.parentNode.removeChild(x),clearTimeout(l),e(o))}var c=new t(d),p=new t(d),f=new t(d),v=-1,g=-1,w=-1,y=-1,b=-1,k=-1,x=document.createElement("div");x.dir="ltr",i(c,u(o,"sans-serif")),i(p,u(o,"serif")),i(f,u(o,"monospace")),x.appendChild(c.a),x.appendChild(p.a),x.appendChild(f.a),document.body.appendChild(x),y=c.a.offsetWidth,b=p.a.offsetWidth,k=f.a.offsetWidth,function e(){if((new Date).getTime()-m>=h)x.parentNode&&x.parentNode.removeChild(x),s(Error(h+"ms timeout exceeded"));else{var t=document.hidden;!0!==t&&void 0!==t||(v=c.a.offsetWidth,g=p.a.offsetWidth,w=f.a.offsetWidth,a()),l=setTimeout(e,50)}}(),n(c,(function(e){v=e,a()})),i(c,u(o,'"'+o.family+'",sans-serif')),n(p,(function(e){g=e,a()})),i(p,u(o,'"'+o.family+'",serif')),n(f,(function(e){w=e,a()})),i(f,u(o,'"'+o.family+'",monospace'))}))}))},"object"==typeof module?module.exports=o:(window.FontFaceObserver=o,window.FontFaceObserver.prototype.load=o.prototype.load)}();
-/**
-   * @license
-   * MIT License
-   *
-   * Copyright (c) 2018 Goffert van Gool
-   *
-   * Permission is hereby granted, free of charge, to any person obtaining a copy
-   * of this software and associated documentation files (the "Software"), to deal
-   * in the Software without restriction, including without limitation the rights
-   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-   * copies of the Software, and to permit persons to whom the Software is
-   * furnished to do so, subject to the following conditions:
-   *
-   * The above copyright notice and this permission notice shall be included in all
-   * copies or substantial portions of the Software.
-   *
-   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-   * SOFTWARE.
-   */
-const d={};window.addEventListener("keydown",e=>{e.defaultPrevented?console.warn("Keypress ignored!"):d[e.key]&&d[e.key].every(t=>{if(null!==t.offsetParent)return e.stopPropagation(),t.click(),!t.override})},!0);class l extends t.GluonElement{static get observedAttributes(){return["key","override"]}attributeChangedCallback(e,t,i){"key"===e?this.__register(i,t):"override"===e&&this.__override(this.key)}set key(e){e?this.setAttribute("key",e):this.removeAttribute("key")}get key(){return this.getAttribute("key")}set override(e){e?this.setAttribute("override",""):this.removeAttribute("override")}get override(){return""===this.getAttribute("override")}__register(e,t){if(t&&d[t]){const e=d[t].indexOf(this);-1!=e&&(d[t].splice(e,1),0===d[t].length&&delete d[t])}e&&(d[e]||(d[e]=[]),this.override?d[e].unshift(this):d[e].push(this))}__override(e){if(e&&d[e]){const t=d[e].indexOf(this);-1!=t&&(d[e].splice(t,1),d[e].unshift(this))}}}customElements.define(l.is,l);const c=document.createTextNode("\n  /* SLIDEM GLOBAL STYLES */\n  body {\n    margin: 0;\n  }\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n\n  /* Keyframes are defined here to patch a scoping bug in Chrome */\n  @keyframes slidem-fade-in {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes slidem-fade-out {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n\n  @keyframes slidem-slide-in-forward {\n    from {\n      transform: translateX(100vw);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes slidem-slide-in-backward {\n    from {\n      transform: translateX(0);\n    }\n    to {\n      transform: translateX(100vw);\n    }\n  }\n\n  @keyframes slidem-slide-out-forward {\n    from {\n      transform: translateX(0);\n    }\n    to {\n      transform: translateX(-100vw);\n    }\n  }\n\n  @keyframes slidem-slide-out-backward {\n    from {\n      transform: translateX(-100vw);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n"),h=document.createElement("style");h.appendChild(c),document.head.appendChild(h);class u extends t.GluonElement{get template(){return t.html`
-      <div class="slides">
-        <slot id="slides"></slot>
-      </div>
-      <div id="progress"></div>
-      <div id="timer"></div>
-      <gluon-keybinding id="timerToggle" key="t"></gluon-keybinding>
-      <gluon-keybinding id="presenterToggle" key="p"></gluon-keybinding>
-      <div id="forward">
-        <gluon-keybinding key="PageDown"></gluon-keybinding>
-        <gluon-keybinding key="ArrowRight"></gluon-keybinding>
-        <gluon-keybinding key="Right"></gluon-keybinding>
-        <slot name="forward"></slot>
-      </div>
-      <div id="backward">
-        <gluon-keybinding key="PageUp"></gluon-keybinding>
-        <gluon-keybinding key="ArrowLeft"></gluon-keybinding>
-        <gluon-keybinding key="Left"></gluon-keybinding>
-        <slot name="backward"></slot>
-      </div>
-      <style>
-        @keyframes slidem-fade-in {
-          from {
-            opacity: 0;
-          }
-          to {
-            opacity: 1;
-          }
-        }
-
-        @keyframes slidem-fade-out {
-          from {
-            opacity: 1;
-          }
-          to {
-            opacity: 0;
-          }
-        }
-
-        @keyframes slidem-slide-in-forward {
-          from {
-            transform: translateX(100vw);
-          }
-          to {
-            transform: translateX(0);
-          }
-        }
-
-        @keyframes slidem-slide-in-backward {
-          from {
-            transform: translateX(0);
-          }
-          to {
-            transform: translateX(100vw);
-          }
-        }
-
-        @keyframes slidem-slide-out-forward {
-          from {
-            transform: translateX(0);
-          }
-          to {
-            transform: translateX(-100vw);
-          }
-        }
-
-        @keyframes slidem-slide-out-backward {
-          from {
-            transform: translateX(-100vw);
-          }
-          to {
-            transform: translateX(0);
-          }
-        }
-        :host {
-          display: block;
-          overflow: hidden;
-          position: absolute;
-          top: 0;
-          left: 0;
-          bottom: 0;
-          right: 0;
-          font-family: 'sans-serif';
-          font-size: 56px;
-          line-height: 1;
-        }
-
-        .slides ::slotted(*) {
-          position: absolute;
-          top: 0;
-          right: 0;
-          bottom: 0;
-          left: 0;
-          animation-duration: 0.4s;
-          animation-fill-mode: both;
-          animation-timing-function: ease-in-out;
-        }
-
-        .slides ::slotted(:not([active]):not([previous]):not([next])) {
-          display: none;
-        }
-
-        :host(:not([presenter])) .slides ::slotted([next]:not([previous])) {
-          display: none;
-        }
-
-        #progress {
-          position: absolute;
-          bottom: 0px;
-          left: 0;
-          right: 0;
-          height: 50px;
-          text-align: center;
-          display: flex;
-          flex-flow: row;
-          justify-content: center;
-          z-index: 10;
-        }
-        #progress div {
-          height: 8px;
-          width: 8px;
-          border-radius: 50%;
-          border: 2px solid white;
-          margin-left: 6px;
-          margin-right: 6px;
-          background: transparent;
-          transition: background 0.2s, transform 0.2s;
-        }
-        #progress div.active {
-          background: white;
-          transform: scale(1.3);
-        }
-        :host([progress="dark"]) #progress div {
-          border: 2px solid black;
-        }
-        :host([progress="dark"]) #progress div.active {
-          background: black;
-        }
-        :host([progress="none"]) #progress {
-          display: none;
-        }
-
-        #timer {
-          display: none;
-          position: absolute;
-          top: 5%;
-          right: 5%;
-          color: white;
-          font-size: 4vw;
-          font-weight: bold;
-          font-family: Helvetica, Arial, sans-serif;
-        }
-        :host([presenter]) #timer {
-          display: inline;
-        }
-
-        :host([presenter]) {
-          background: black;
-        }
-        /* White box around active slide */
-        :host([presenter])::before {
-          display: block;
-          position: absolute;
-          content: '';
-          top: calc(25% - 20px);
-          right:  calc(45% - 20px);
-          bottom:  calc(25% - 20px);
-          left:  calc(5% - 20px);
-          border: 2px solid white;
-        }
-        /* White box around next slide */
-        :host([presenter])::after {
-          display: block;
-          position: absolute;
-          content: '';
-          top: calc(32.5% - 20px);
-          right: calc(4.5% - 20px);
-          bottom: calc(32.5% - 20px);
-          left: calc(60.5% - 20px);
-          border: 2px solid white;
-        }
-        :host([presenter]) .slides ::slotted(*) {
-          animation: none !important; /* Block user-configured animations */
-        }
-        :host([presenter]) .slides ::slotted([previous]:not([next])) {
-          display: none;
-        }
-        :host([presenter]) .slides ::slotted([active]) {
-          transform: translate(-20%, 0) scale(0.5) !important; /* Force presenter layout */
-        }
-        :host([presenter]) .slides ::slotted([next]) {
-          transform: translate(28%, 0) scale(0.35) !important; /* Force presenter layout */
-        }
-
-        .slides ::slotted([active]) {
-          z-index: 2;
-        }
-        .slides ::slotted([previous]) {
-          z-index: 0;
-        }
-        .slides ::slotted([fade-in][active].animate-forward) {
-          animation-name: slidem-fade-in;
-        }
-        .slides ::slotted([fade-in][previous].animate-backward) {
-          animation-name: slidem-fade-out;
-          z-index: 3;
-        }
-        .slides ::slotted([fade-out][active].animate-backward) {
-          animation-name: slidem-fade-in;
-        }
-        .slides ::slotted([fade-out][previous].animate-forward) {
-          animation-name: slidem-fade-out;
-          z-index: 3;
-        }
-        .slides ::slotted([slide-in][active].animate-forward) {
-          animation-name: slidem-slide-in-forward;
-        }
-        .slides ::slotted([slide-in][previous].animate-backward) {
-          animation-name: slidem-slide-in-backward;
-          z-index: 3;
-        }
-        .slides ::slotted([slide-out][active].animate-backward) {
-          animation-name: slidem-slide-out-backward;
-        }
-        .slides ::slotted([slide-out][previous].animate-forward) {
-          animation-name: slidem-slide-out-forward;
-          z-index: 3;
-        }
-      </style>
-    `}get presenter(){return null!==this.getAttribute("presenter")}set presenter(e){e?this.setAttribute("presenter",""):this.removeAttribute("presenter")}connectedCallback(){let e;var t;super.connectedCallback(),this.presenter="presenter"===r(),this.$.presenterToggle.addEventListener("click",()=>{this.presenter=!this.presenter,d({query:this.presenter?"presenter":"",hash:a()})}),this.$.timerToggle.addEventListener("click",()=>{if(e)clearInterval(e),e=void 0,this.$.timer.innerText="";else{this.$.timer.innerText="00:00";let t=new Date;e=setInterval(()=>this.$.timer.innerText=m(t),1e3)}}),this.slides=Array.from(this.children).filter(e=>!e.hasAttribute("slot")),this.slides.forEach(()=>{this.$.progress.appendChild(document.createElement("div"))}),t=()=>{this.slides[this.currentSlide].step=this.currentStep+1,this.slides[this.currentSlide].setAttribute("active",""),this.previousSlide!==this.currentSlide&&(void 0!==this.previousSlide&&(this.previousSlide<this.currentSlide?(this.slides[this.previousSlide].classList.add("animate-forward"),this.slides[this.currentSlide].classList.add("animate-forward"),this.slides[this.previousSlide].classList.remove("animate-backward"),this.slides[this.currentSlide].classList.remove("animate-backward")):(this.slides[this.previousSlide].classList.add("animate-backward"),this.slides[this.currentSlide].classList.add("animate-backward"),this.slides[this.previousSlide].classList.remove("animate-forward"),this.slides[this.currentSlide].classList.remove("animate-forward"))),void 0!==this.oldNextSlide&&this.slides[this.oldNextSlide].removeAttribute("next"),this.nextSlide=this.slides[this.currentSlide+1]&&this.currentSlide+1||void 0,void 0!==this.nextSlide&&(this.slides[this.nextSlide].setAttribute("next",""),this.oldNextSlide=this.nextSlide),void 0!==this.oldPreviousSlide&&this.slides[this.oldPreviousSlide].removeAttribute("previous"),void 0!==this.previousSlide&&(this.slides[this.previousSlide].removeAttribute("active"),this.slides[this.previousSlide].setAttribute("previous",""),this.$.progress.children[this.previousSlide].classList.remove("active"),this.oldPreviousSlide=this.previousSlide),this.$.progress.children[this.currentSlide].classList.add("active"),this.previousSlide=this.currentSlide)},i||(window.addEventListener("hashchange",n),window.addEventListener("location-changed",n),window.addEventListener("popstate",n),i=!0),s.push(t);const d=({path:e=o(),query:t=r(),hash:i=a()}={})=>{e=window.history.pushState({},"",`${e}${t&&"?"+t||""}${i&&"#"+i||""}`),window.dispatchEvent(new Event("location-changed")),localStorage.setItem("location",a())};let l,c;this.$.forward.onclick=()=>{this.slides[this.currentSlide].steps&&this.slides[this.currentSlide].step<=this.slides[this.currentSlide].steps?d({hash:`slide-${this.currentSlide+1}/step-${this.slides[this.currentSlide].step+1}`}):this.currentSlide<this.slides.length-1&&d({hash:`slide-${this.currentSlide+2}/step-1`})},this.$.backward.onclick=()=>{this.slides[this.currentSlide].steps&&this.slides[this.currentSlide].step>1?d({hash:`slide-${this.currentSlide+1}/step-${this.slides[this.currentSlide].step-1}`}):this.currentSlide>0&&d({hash:`slide-${this.currentSlide}/step-${(this.slides[this.currentSlide-1].steps||0)+1}`})},document.addEventListener("touchstart",e=>{l=e.touches[0].clientX,c=e.touches[0].clientY},!1),document.addEventListener("touchend",e=>{const t=e.changedTouches[0].clientX-l,i=e.changedTouches[0].clientY-c;Math.abs(t)>60&&Math.abs(t)>Math.abs(i)&&(t<0?this.$.forward.onclick():this.$.backward.onclick())},!1);const h=()=>{this.removeAttribute("loading"),window.dispatchEvent(new Event("location-changed"))},u=this.getAttribute("font");u&&(this.style.fontFamily=u);let p=new Promise((e,t)=>{let i=setTimeout(()=>{clearTimeout(i),t("Font loading timeout")},2e3)});Promise.race([Promise.all(this.slides.map(e=>e.tagName.includes("-")&&customElements.whenDefined(e.tagName.toLowerCase()))),p]).then(()=>Promise.race([Promise.all(this.slides.filter(e=>e.fonts).map(e=>e.fonts).reduce((e,t)=>e.concat(t),u&&[u]||[]).map(e=>new FontFaceObserver(e).load())),p])).then(h,()=>console.warn("Failed to initialize fonts")||h()),window.addEventListener("storage",e=>{"location"===e.key&&a()!==e.newValue&&d({hash:""+e.newValue})})}get currentSlide(){return(a().match(/(?:slide-(\d+))?(?:\/step-(\d+|Infinity))?/)[1]||1)-1}get currentStep(){return(a().match(/(?:slide-(\d+))?(?:\/step-(\d+|Infinity))?/)[2]||1)-1}}const m=e=>{const t=new Date(new Date-e),i=e=>e<10&&"0"+e||e,s=i(t.getUTCHours()),n=i(t.getUTCMinutes()),o=i(t.getUTCSeconds());return`${t.getUTCHours()&&s+":"||""}${n}:${o}`};customElements.define(u.is,u),e.SlidemDeck=u,Object.defineProperty(e,"__esModule",{value:!0})}));
diff --git a/node_modules/slidem/slidem-polymersummit-slide.js b/node_modules/slidem/slidem-polymersummit-slide.js
deleted file mode 100644
index dd82806..0000000
--- a/node_modules/slidem/slidem-polymersummit-slide.js
+++ /dev/null
@@ -1,169 +0,0 @@
-import { html } from '../@gluon/gluon/gluon.js';
-import { SlidemSlideBase } from './slidem-slide-base.js';
-
-const fontLink = document.createElement('link');
-fontLink.href = 'https://fonts.googleapis.com/css?family=Roboto:400,500,700';
-fontLink.rel = 'stylesheet';
-document.head.appendChild(fontLink);
-
-export class SlidemPolymersummitSlide extends SlidemSlideBase {
-  get fonts() {
-    return ['Roboto'];
-  }
-  get template() {
-    this.content = html`
-      <div class="introSlide">
-        <div class="side">
-          <div class="avatar"><slot name="avatar"></slot></div>
-          <div class="speakerDetails">
-            <slot name="speaker"></slot>
-            <div>
-              <slot name="email"></slot>
-            </div>
-            <div>
-              <slot name="twitter"></slot>
-            </div>
-          </div>
-          <div class="logo">
-            <slot name="logo"></slot>
-          </div>
-        </div>
-        <div class="event">
-          <slot name="event"></slot>
-        </div>
-        <slot name="title"></slot>
-        <slot name="subtitle"></slot>
-      </div>
-    `;
-
-    return html`
-      <style>
-        :host {
-          background: #2e9be6;
-          font-family: 'Roboto';
-        }
-        .introSlide {
-          overflow: hidden;
-          border-bottom: 3px solid white;
-          color: white;
-          position: relative;
-          height: 100%;
-        }
-
-        .topShade {
-          position: absolute;
-          top: 0;
-          left: 0;
-          right: 0;
-          height: 34px;
-          background: rgba(0, 0, 0, 0.2);
-        }
-
-        .introSlide .event {
-          position: absolute;
-          bottom: 26px;
-          left: 0;
-        }
-
-        .introSlide .event ::slotted([slot="event"]) {
-          margin: 0;
-          font-size: 24px;
-          letter-spacing: 1px;
-          font-weight: 700;
-        }
-
-        .introSlide .side {
-          position: absolute;
-          right: 0;
-          width: 340px;
-          height: 100%;
-          display: flex;
-          flex-flow: column;
-          justify-content: flex-end;
-        }
-
-        .introSlide .side * {
-          flex-shrink: 0;
-        }
-
-        .introSlide .avatar {
-          height: 340px;
-          width: 340px;
-          border-radius: 50%;
-          overflow: hidden;
-          margin-bottom: 56px;
-        }
-
-        .introSlide ::slotted([slot="avatar"]) {
-          max-width: 340px;
-        }
-
-        .introSlide .speakerDetails {
-          border-top: 3px solid white;
-          padding-top: 50px;
-          padding-bottom: 30px;
-        }
-
-
-        .introSlide .speakerDetails ::slotted([slot="speaker"]) {
-          font-weight: 400;
-          margin-top: 0;
-          margin-bottom: 20px;
-          font-size: 32px;
-          letter-spacing: 1px;
-        }
-
-        .introSlide .speakerDetails div {
-          margin-bottom: 20px;
-        }
-
-        .introSlide .speakerDetails div ::slotted([slot="email"]),
-        .introSlide .speakerDetails div ::slotted([slot="twitter"]) {
-          color: white;
-          font-weight: 500;
-          font-size: 28px;
-          letter-spacing: 1px;
-        }
-
-        .introSlide .logo {
-          display: flex;
-          justify-content: center;
-          align-items: center;
-          height: 260px;
-          background-color: white;
-        }
-
-        .introSlide .logo ::slotted([slot="logo"]) {
-          max-height: 200px;
-          max-width: 300px;
-          background-position: center;
-          background-size: contain;
-        }
-
-        .introSlide ::slotted([slot="title"]) {
-          margin-top: 190px;
-          margin-bottom: 0;
-          font-weight: 500;
-          font-size: 150px;
-          color: white;
-          letter-spacing: 2px;
-        }
-
-        .introSlide ::slotted([slot="subtitle"]) {
-          display: inline-block;
-          margin-top: 40px;
-          font-weight: 400;
-          font-size: 100px;
-          letter-spacing: 2px;
-          color: white;
-          padding-top: 40px;
-          border-top: 3px solid white;
-        }
-      </style>
-      <div class="topShade"></div>
-      ${super.template}
-    `;
-  }
-}
-
-customElements.define(SlidemPolymersummitSlide.is, SlidemPolymersummitSlide);
diff --git a/node_modules/slidem/slidem-polymersummit-slide.umd.js b/node_modules/slidem/slidem-polymersummit-slide.umd.js
deleted file mode 100644
index 515dc1b..0000000
--- a/node_modules/slidem/slidem-polymersummit-slide.umd.js
+++ /dev/null
@@ -1,232 +0,0 @@
-!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("../node_modules/@gluon/gluon/gluon.js")):"function"==typeof define&&define.amd?define(["exports","../node_modules/@gluon/gluon/gluon.js"],e):e((t=t||self).slidem={},t.GluonJS)}(this,(function(t,e){"use strict";const o=document.createTextNode("\n  /* SLIDEM SLIDE GLOBAL STYLES */\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n"),i=document.createElement("style");i.appendChild(o),document.head.appendChild(i);const n=e.html`
-  <style>
-    :host {
-      display: flex;
-      flex-direction: row;
-      overflow: hidden;
-      align-items: center;
-      background-size: cover;
-      background-position: center;
-    }
-
-    :host([zoom-in]) #content, :host([zoom-out]) #content {
-      animation-duration: 0.4s;
-      animation-fill-mode: both;
-      animation-timing-function: ease-in-out;
-    }
-
-    @keyframes zoom-in {
-      from {
-        opacity: 0;
-        transform: scale(0);
-      }
-      to {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-    }
-
-    @keyframes zoom-out {
-      from {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-      to {
-        opacity: 0;
-        transform: scale(0);
-      }
-    }
-
-    :host([zoom-in][active].animate-forward) #content {
-      animation-name: zoom-in;
-    }
-
-    :host([zoom-in][previous].animate-backward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][previous].animate-forward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][active].animate-backward) #content {
-      animation-name: zoom-in;
-    }
-
-    #iefix {
-      width: 100%;
-      display: flex;
-      flex-direction: column;
-      align-items: center;
-    }
-
-    #content {
-      width: var(--slidem-content-width, 1760px);
-      max-height: var(--slidem-content-height, 990px);
-      flex-shrink: 0;
-    }
-
-    :host(:not([center])) #content {
-      height: var(--slidem-content-height, 990px);
-    }
-  </style>
-`;class s extends e.GluonElement{get template(){return null!==this.getAttribute("fullscreen")||this.constructor.fullscreen?e.html`
-        ${n}
-        ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-      `:e.html`
-        ${n}
-        <div id="iefix" part="container">
-          <div id="content" part="content">
-            ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-          </div>
-        </div>
-      `}connectedCallback(){let t;super.connectedCallback(),this._steps=Array.from(this.querySelectorAll("[reveal]")),this.steps=this._steps.length,this.__resizeContent(),window.addEventListener("resize",()=>{window.clearTimeout(t),t=window.setTimeout(()=>{this.__resizeContent()},200)})}static get observedAttributes(){return["step"]}attributeChangedCallback(t,e,o){if("step"===t){const t=Number(o);if(t>this.steps+1)return void this.setAttribute("step",this.steps+1);this.__setStep(t)}}set step(t){this.setAttribute("step",t)}get step(){return Number(this.getAttribute("step"))||1}__setStep(t){this._steps.forEach((e,o)=>{e.style.opacity=o<t-1?1:0})}__resizeContent(){const t=window.getComputedStyle(document.documentElement),e=Number((t.getPropertyValue("--slidem-content-width")||"1760px").slice(0,-2)),o=Number((t.getPropertyValue("--slidem-content-height")||"990px").slice(0,-2)),i=Math.min(window.innerHeight/1.09/o,window.innerWidth/1.09/e);i<1?(document.documentElement.style.setProperty("--slidem-content-scale",i),this.$.content&&(this.$.content.style.transform=`scale(${i})`)):(document.documentElement.style.setProperty("--slidem-content-scale",1),this.$.content&&(this.$.content.style.transform="scale(1)"))}}const l=document.createElement("link");l.href="https://fonts.googleapis.com/css?family=Roboto:400,500,700",l.rel="stylesheet",document.head.appendChild(l);class a extends s{get fonts(){return["Roboto"]}get template(){return this.content=e.html`
-      <div class="introSlide">
-        <div class="side">
-          <div class="avatar"><slot name="avatar"></slot></div>
-          <div class="speakerDetails">
-            <slot name="speaker"></slot>
-            <div>
-              <slot name="email"></slot>
-            </div>
-            <div>
-              <slot name="twitter"></slot>
-            </div>
-          </div>
-          <div class="logo">
-            <slot name="logo"></slot>
-          </div>
-        </div>
-        <div class="event">
-          <slot name="event"></slot>
-        </div>
-        <slot name="title"></slot>
-        <slot name="subtitle"></slot>
-      </div>
-    `,e.html`
-      <style>
-        :host {
-          background: #2e9be6;
-          font-family: 'Roboto';
-        }
-        .introSlide {
-          overflow: hidden;
-          border-bottom: 3px solid white;
-          color: white;
-          position: relative;
-          height: 100%;
-        }
-
-        .topShade {
-          position: absolute;
-          top: 0;
-          left: 0;
-          right: 0;
-          height: 34px;
-          background: rgba(0, 0, 0, 0.2);
-        }
-
-        .introSlide .event {
-          position: absolute;
-          bottom: 26px;
-          left: 0;
-        }
-
-        .introSlide .event ::slotted([slot="event"]) {
-          margin: 0;
-          font-size: 24px;
-          letter-spacing: 1px;
-          font-weight: 700;
-        }
-
-        .introSlide .side {
-          position: absolute;
-          right: 0;
-          width: 340px;
-          height: 100%;
-          display: flex;
-          flex-flow: column;
-          justify-content: flex-end;
-        }
-
-        .introSlide .side * {
-          flex-shrink: 0;
-        }
-
-        .introSlide .avatar {
-          height: 340px;
-          width: 340px;
-          border-radius: 50%;
-          overflow: hidden;
-          margin-bottom: 56px;
-        }
-
-        .introSlide ::slotted([slot="avatar"]) {
-          max-width: 340px;
-        }
-
-        .introSlide .speakerDetails {
-          border-top: 3px solid white;
-          padding-top: 50px;
-          padding-bottom: 30px;
-        }
-
-
-        .introSlide .speakerDetails ::slotted([slot="speaker"]) {
-          font-weight: 400;
-          margin-top: 0;
-          margin-bottom: 20px;
-          font-size: 32px;
-          letter-spacing: 1px;
-        }
-
-        .introSlide .speakerDetails div {
-          margin-bottom: 20px;
-        }
-
-        .introSlide .speakerDetails div ::slotted([slot="email"]),
-        .introSlide .speakerDetails div ::slotted([slot="twitter"]) {
-          color: white;
-          font-weight: 500;
-          font-size: 28px;
-          letter-spacing: 1px;
-        }
-
-        .introSlide .logo {
-          display: flex;
-          justify-content: center;
-          align-items: center;
-          height: 260px;
-          background-color: white;
-        }
-
-        .introSlide .logo ::slotted([slot="logo"]) {
-          max-height: 200px;
-          max-width: 300px;
-          background-position: center;
-          background-size: contain;
-        }
-
-        .introSlide ::slotted([slot="title"]) {
-          margin-top: 190px;
-          margin-bottom: 0;
-          font-weight: 500;
-          font-size: 150px;
-          color: white;
-          letter-spacing: 2px;
-        }
-
-        .introSlide ::slotted([slot="subtitle"]) {
-          display: inline-block;
-          margin-top: 40px;
-          font-weight: 400;
-          font-size: 100px;
-          letter-spacing: 2px;
-          color: white;
-          padding-top: 40px;
-          border-top: 3px solid white;
-        }
-      </style>
-      <div class="topShade"></div>
-      ${super.template}
-    `}}customElements.define(a.is,a),t.SlidemPolymersummitSlide=a,Object.defineProperty(t,"__esModule",{value:!0})}));
diff --git a/node_modules/slidem/slidem-slide-base.js b/node_modules/slidem/slidem-slide-base.js
index a36279d..64c5617 100644
--- a/node_modules/slidem/slidem-slide-base.js
+++ b/node_modules/slidem/slidem-slide-base.js
@@ -1,169 +1,246 @@
-import { GluonElement, html } from '../@gluon/gluon/gluon.js';
-
-const styleText = document.createTextNode(`
-  /* SLIDEM SLIDE GLOBAL STYLES */
-
-  [reveal] {
-    opacity: 0;
-    transition: opacity 0.2s;
-  }
-`);
+/**
+ * @license
+MIT License
+
+Copyright (c) 2017 Goffert van Gool
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+
+*/
+var __defProp = Object.defineProperty;
+var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __publicField = (obj, key, value) => {
+  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
+  return value;
+};
+var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
+
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css
+var sheet = new CSSStyleSheet();
+sheet.replace(`:host {
+  display: flex;
+  flex-direction: row;
+  overflow: hidden;
+  align-items: center;
+  background: var(--background, white);
+  background-size: cover;
+  background-position: center;
+}
 
-const styleNode = document.createElement('style');
-styleNode.appendChild(styleText);
-document.head.appendChild(styleNode);
-
-const slidemStyle = html`
-  <style>
-    :host {
-      display: flex;
-      flex-direction: row;
-      overflow: hidden;
-      align-items: center;
-      background-size: cover;
-      background-position: center;
-    }
+:host([in=zoom]) #content,
+:host([out=zoom]) #content {
+  animation-duration: 0.4s;
+  animation-fill-mode: both;
+  animation-timing-function: ease-in-out;
+}
 
-    :host([zoom-in]) #content, :host([zoom-out]) #content {
-      animation-duration: 0.4s;
-      animation-fill-mode: both;
-      animation-timing-function: ease-in-out;
-    }
+:host([in=zoom][active].animate-forward) #content {
+  animation-name: zoom-in;
+}
 
-    @keyframes zoom-in {
-      from {
-        opacity: 0;
-        transform: scale(0);
-      }
-      to {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-    }
+:host([in=zoom][previous].animate-backward) #content {
+  animation-name: zoom-out;
+}
 
-    @keyframes zoom-out {
-      from {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-      to {
-        opacity: 0;
-        transform: scale(0);
-      }
-    }
+:host([out=zoom][previous].animate-forward) #content {
+  animation-name: zoom-out;
+}
 
-    :host([zoom-in][active].animate-forward) #content {
-      animation-name: zoom-in;
-    }
+:host([out=zoom][active].animate-backward) #content {
+  animation-name: zoom-in;
+}
 
-    :host([zoom-in][previous].animate-backward) #content {
-      animation-name: zoom-out;
-    }
+#container {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  width: 100%;
+}
 
-    :host([zoom-out][previous].animate-forward) #content {
-      animation-name: zoom-out;
-    }
+#content {
+  width: var(--slidem-content-width, 1760px);
+  max-height: var(--slidem-content-height, 990px);
+  flex-shrink: 0;
+}
 
-    :host([zoom-out][active].animate-backward) #content {
-      animation-name: zoom-in;
-    }
+:host(:not([center])) #content {
+  height: var(--slidem-content-height, 990px);
+}
 
-    #iefix {
-      width: 100%;
-      display: flex;
-      flex-direction: column;
-      align-items: center;
-    }
+@keyframes zoom-in {
+  from {
+    opacity: 0;
+    scale: 0;
+  }
+  to {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
+  }
+}
 
-    #content {
-      width: var(--slidem-content-width, 1760px);
-      max-height: var(--slidem-content-height, 990px);
-      flex-shrink: 0;
-    }
+@keyframes zoom-out {
+  from {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
+  }
+  to {
+    opacity: 0;
+    scale: 0;
+  }
+}
 
-    :host(:not([center])) #content {
-      height: var(--slidem-content-height, 990px);
-    }
-  </style>
+`);
+var slidem_slide_base_default = sheet;
+
+// html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html
+var template = document.createElement("template");
+template.innerHTML = `<div id="container">
+  <div id="content" part="content">
+    <slot id="slot"></slot>
+  </div>
+</div>
 `;
-
-export class SlidemSlideBase extends GluonElement {
-  get template() {
-    if (this.getAttribute('fullscreen') !== null || this.constructor.fullscreen) {
-      return html`
-        ${slidemStyle}
-        ${(this.constructor.name !== 'SlidemSlide' && this.content) || html`<slot id="slot"></slot>`}
-      `;
-    } else {
-      return html`
-        ${slidemStyle}
-        <div id="iefix" part="container">
-          <div id="content" part="content">
-            ${(this.constructor.name !== 'SlidemSlide' && this.content) || html`<slot id="slot"></slot>`}
-          </div>
-        </div>
-      `;
-    }
+var slidem_slide_base_default2 = template;
+
+// src/slidem-slide-base.js
+var _instances, _steps, _setStep, setStep_fn, _resizeContent, resizeContent_fn;
+var _SlidemSlideBase = class extends HTMLElement {
+  constructor() {
+    super();
+    __privateAdd(this, _setStep);
+    __privateAdd(this, _resizeContent);
+    __privateAdd(this, _steps, void 0);
+    __publicField(this, "steps");
+    this.attachShadow({ mode: "open" }).append(slidem_slide_base_default2.content.cloneNode(true));
+    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, slidem_slide_base_default];
   }
-
-  connectedCallback() {
-    super.connectedCallback();
-    this._steps = Array.from(this.querySelectorAll('[reveal]'));
-    this.steps = this._steps.length;
-    this.__resizeContent();
+  static {
     let resizeTimeout;
-    window.addEventListener('resize', () => {
+    window.addEventListener("resize", () => {
       window.clearTimeout(resizeTimeout);
       resizeTimeout = window.setTimeout(() => {
-        this.__resizeContent();
+        __privateGet(_SlidemSlideBase, _instances).forEach((i) => {
+          var _a;
+          return __privateMethod(_a = i, _resizeContent, resizeContent_fn).call(_a);
+        });
       }, 200);
     });
   }
-
-  static get observedAttributes() {
-    return ['step'];
+  get auto() {
+    if (!this.hasAttribute("auto"))
+      return false;
+    else
+      return parseInt(this.getAttribute("auto")) || 5e3;
   }
-
-  attributeChangedCallback(attr, oldVal, newVal) {
-    if (attr === 'step') {
-      const step = Number(newVal);
-      if (step > this.steps + 1) {
-        this.setAttribute('step', this.steps + 1);
-        return;
-      }
-      this.__setStep(step);
-    }
+  set auto(v) {
+    if (!(typeof v === "number") || Number.isNaN(v))
+      this.removeAttribute("auto");
+    else
+      this.setAttribute("auto", v.toString());
   }
-
   set step(step) {
-    this.setAttribute('step', step);
+    this.setAttribute("step", step);
   }
-
   get step() {
-    return Number(this.getAttribute('step')) || 1;
+    return Number(this.getAttribute("step")) || 1;
   }
-
-  __setStep(newStep) {
-    this._steps.forEach((step, i) => {
-      if (i < newStep - 1) {
-        step.style.opacity = 1;
-      } else {
-        step.style.opacity = 0;
-      }
-    });
+  get $() {
+    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll("[id]"), (el) => [el.id, el]));
   }
-
-  __resizeContent() {
-    const documentStyle = window.getComputedStyle(document.documentElement);
-    const width = Number((documentStyle.getPropertyValue('--slidem-content-width') || '1760px').slice(0, -2));
-    const height = Number((documentStyle.getPropertyValue('--slidem-content-height') || '990px').slice(0, -2));
-    const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);
-    if (scale < 1) {
-      document.documentElement.style.setProperty('--slidem-content-scale', scale);
-      this.$.content && (this.$.content.style.transform = `scale(${scale})`);
-    } else {
-      document.documentElement.style.setProperty('--slidem-content-scale', 1);
-      this.$.content && (this.$.content.style.transform = `scale(1)`);
+  connectedCallback() {
+    __privateGet(_SlidemSlideBase, _instances).add(this);
+    __privateSet(this, _steps, Array.from(this.querySelectorAll("[reveal]")));
+    this.steps = __privateGet(this, _steps).length;
+    __privateMethod(this, _resizeContent, resizeContent_fn).call(this);
+    __privateGet(this, _steps).forEach((step, i) => step.setAttribute("step", i + 2));
+    if (__privateGet(this, _steps).length)
+      __privateGet(this, _steps)[0].previousElementSibling?.setAttribute("step", 1);
+  }
+  disconnectedCallback() {
+    __privateGet(_SlidemSlideBase, _instances).delete(this);
+  }
+  attributeChangedCallback(attr, _, newVal) {
+    if (attr === "step") {
+      const step = Number(newVal);
+      if (step > this.steps + 1) {
+        this.setAttribute("step", this.steps + 1);
+        return;
+      }
+      __privateMethod(this, _setStep, setStep_fn).call(this, step);
     }
   }
-}
+};
+var SlidemSlideBase = _SlidemSlideBase;
+_instances = new WeakMap();
+_steps = new WeakMap();
+_setStep = new WeakSet();
+setStep_fn = function(step) {
+  this.querySelector('[step="1"]')?.toggleAttribute?.("past", step > 1);
+  __privateGet(this, _steps).forEach((el, i) => {
+    const elStep = i + 2;
+    const past = elStep < step;
+    const current = elStep === step;
+    el.toggleAttribute("past", past);
+    el.toggleAttribute("current", current);
+  });
+};
+_resizeContent = new WeakSet();
+resizeContent_fn = function() {
+  const documentStyle = window.getComputedStyle(document.documentElement);
+  const width = Number((documentStyle.getPropertyValue("--slidem-content-width") || "1760px").slice(0, -2));
+  const height = Number((documentStyle.getPropertyValue("--slidem-content-height") || "990px").slice(0, -2));
+  const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);
+  if (scale < 1) {
+    document.documentElement.style.setProperty("--slidem-content-scale", scale);
+    this.$.content?.style?.setProperty("scale", scale);
+  } else {
+    document.documentElement.style.setProperty("--slidem-content-scale", 1);
+    this.$.content?.style?.setProperty("scale", 1);
+  }
+};
+__publicField(SlidemSlideBase, "observedAttributes", [
+  "auto",
+  "step"
+]);
+__privateAdd(SlidemSlideBase, _instances, /* @__PURE__ */ new Set());
+export {
+  SlidemSlideBase
+};
+//# sourceMappingURL=slidem-slide-base.js.map
diff --git a/node_modules/slidem/slidem-slide-base.js.map b/node_modules/slidem/slidem-slide-base.js.map
new file mode 100644
index 0000000..5be061f
--- /dev/null
+++ b/node_modules/slidem/slidem-slide-base.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "sources": ["assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css", "html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html", "src/slidem-slide-base.js"],
+  "sourcesContent": ["const sheet = new CSSStyleSheet(); sheet.replace(`:host {\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  align-items: center;\n  background: var(--background, white);\n  background-size: cover;\n  background-position: center;\n}\n\n:host([in=zoom]) #content,\n:host([out=zoom]) #content {\n  animation-duration: 0.4s;\n  animation-fill-mode: both;\n  animation-timing-function: ease-in-out;\n}\n\n:host([in=zoom][active].animate-forward) #content {\n  animation-name: zoom-in;\n}\n\n:host([in=zoom][previous].animate-backward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][previous].animate-forward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][active].animate-backward) #content {\n  animation-name: zoom-in;\n}\n\n#container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n#content {\n  width: var(--slidem-content-width, 1760px);\n  max-height: var(--slidem-content-height, 990px);\n  flex-shrink: 0;\n}\n\n:host(:not([center])) #content {\n  height: var(--slidem-content-height, 990px);\n}\n\n@keyframes zoom-in {\n  from {\n    opacity: 0;\n    scale: 0;\n  }\n  to {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n}\n\n@keyframes zoom-out {\n  from {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n  to {\n    opacity: 0;\n    scale: 0;\n  }\n}\n\n`);export default sheet;", "  const template = document.createElement('template');\n  template.innerHTML = `<div id=\"container\">\n  <div id=\"content\" part=\"content\">\n    <slot id=\"slot\"></slot>\n  </div>\n</div>\n`;\n  export default template;", "import styleSheet from './slidem-slide-base.css' assert { type: 'css' };\nimport template from './slidem-slide-base.html' assert { type: 'html-template' };\n\nexport class SlidemSlideBase extends HTMLElement {\n  static observedAttributes = [\n    'auto',\n    'step',\n  ];\n\n  static #instances = new Set();\n\n  static {\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n      window.clearTimeout(resizeTimeout);\n      resizeTimeout = window.setTimeout(() => {\n        this.#instances.forEach(i => i.#resizeContent());\n      }, 200);\n    });\n  }\n\n  #steps;\n  steps;\n\n  get auto() {\n    if (!this.hasAttribute('auto'))\n      return false;\n    else\n      return parseInt(this.getAttribute('auto')) || 5000;\n  }\n\n  set auto(v) {\n    if (!(typeof v === 'number') || Number.isNaN(v))\n      this.removeAttribute('auto');\n    else\n      this.setAttribute('auto', v.toString())\n  }\n\n  set step(step) {\n    this.setAttribute('step', step);\n  }\n\n  get step() {\n    return Number(this.getAttribute('step')) || 1;\n  }\n\n  get $() {\n    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll('[id]'), el => [el.id, el]))\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).append(template.content.cloneNode(true));\n    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, styleSheet];\n  }\n\n  connectedCallback() {\n    SlidemSlideBase.#instances.add(this);\n    this.#steps = Array.from(this.querySelectorAll('[reveal]'));\n    this.steps = this.#steps.length;\n    this.#resizeContent();\n    this.#steps.forEach((step, i) => step.setAttribute('step', i + 2));\n    if (this.#steps.length)\n      this.#steps[0].previousElementSibling?.setAttribute('step', 1);\n  }\n\n  disconnectedCallback() {\n    SlidemSlideBase.#instances.delete(this);\n  }\n\n  attributeChangedCallback(attr, _, newVal) {\n    if (attr === 'step') {\n      const step = Number(newVal);\n      if (step > this.steps + 1) {\n        this.setAttribute('step', this.steps + 1);\n        return;\n      }\n      this.#setStep(step);\n    }\n  }\n\n  #setStep(step) {\n    this.querySelector('[step=\"1\"]')?.toggleAttribute?.('past', step > 1);\n    this.#steps.forEach((el, i) => {\n      const elStep = i + 2;\n      const past = elStep < step;\n      const current = elStep === step;\n      el.toggleAttribute('past', past);\n      el.toggleAttribute('current', current);\n    });\n  }\n\n  #resizeContent() {\n    const documentStyle = window.getComputedStyle(document.documentElement);\n    const width = Number((documentStyle.getPropertyValue('--slidem-content-width') || '1760px').slice(0, -2));\n    const height = Number((documentStyle.getPropertyValue('--slidem-content-height') || '990px').slice(0, -2));\n    const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);\n    if (scale < 1) {\n      document.documentElement.style.setProperty('--slidem-content-scale', scale);\n      this.$.content?.style?.setProperty('scale', scale);\n    } else {\n      document.documentElement.style.setProperty('--slidem-content-scale', 1);\n      this.$.content?.style?.setProperty('scale', 1);\n    }\n  }\n}\n"],
+  "mappings": "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",
+  "names": ["slidem_slide_base_default", "slidem_slide_base_default"]
+}
diff --git a/node_modules/slidem/slidem-slide-base.umd.js b/node_modules/slidem/slidem-slide-base.umd.js
deleted file mode 100644
index 288f1a3..0000000
--- a/node_modules/slidem/slidem-slide-base.umd.js
+++ /dev/null
@@ -1,83 +0,0 @@
-!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("../node_modules/@gluon/gluon/gluon.js")):"function"==typeof define&&define.amd?define(["exports","../node_modules/@gluon/gluon/gluon.js"],e):e((t=t||self).slidem={},t.GluonJS)}(this,(function(t,e){"use strict";const n=document.createTextNode("\n  /* SLIDEM SLIDE GLOBAL STYLES */\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n"),o=document.createElement("style");o.appendChild(n),document.head.appendChild(o);const i=e.html`
-  <style>
-    :host {
-      display: flex;
-      flex-direction: row;
-      overflow: hidden;
-      align-items: center;
-      background-size: cover;
-      background-position: center;
-    }
-
-    :host([zoom-in]) #content, :host([zoom-out]) #content {
-      animation-duration: 0.4s;
-      animation-fill-mode: both;
-      animation-timing-function: ease-in-out;
-    }
-
-    @keyframes zoom-in {
-      from {
-        opacity: 0;
-        transform: scale(0);
-      }
-      to {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-    }
-
-    @keyframes zoom-out {
-      from {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-      to {
-        opacity: 0;
-        transform: scale(0);
-      }
-    }
-
-    :host([zoom-in][active].animate-forward) #content {
-      animation-name: zoom-in;
-    }
-
-    :host([zoom-in][previous].animate-backward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][previous].animate-forward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][active].animate-backward) #content {
-      animation-name: zoom-in;
-    }
-
-    #iefix {
-      width: 100%;
-      display: flex;
-      flex-direction: column;
-      align-items: center;
-    }
-
-    #content {
-      width: var(--slidem-content-width, 1760px);
-      max-height: var(--slidem-content-height, 990px);
-      flex-shrink: 0;
-    }
-
-    :host(:not([center])) #content {
-      height: var(--slidem-content-height, 990px);
-    }
-  </style>
-`;class s extends e.GluonElement{get template(){return null!==this.getAttribute("fullscreen")||this.constructor.fullscreen?e.html`
-        ${i}
-        ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-      `:e.html`
-        ${i}
-        <div id="iefix" part="container">
-          <div id="content" part="content">
-            ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-          </div>
-        </div>
-      `}connectedCallback(){let t;super.connectedCallback(),this._steps=Array.from(this.querySelectorAll("[reveal]")),this.steps=this._steps.length,this.__resizeContent(),window.addEventListener("resize",()=>{window.clearTimeout(t),t=window.setTimeout(()=>{this.__resizeContent()},200)})}static get observedAttributes(){return["step"]}attributeChangedCallback(t,e,n){if("step"===t){const t=Number(n);if(t>this.steps+1)return void this.setAttribute("step",this.steps+1);this.__setStep(t)}}set step(t){this.setAttribute("step",t)}get step(){return Number(this.getAttribute("step"))||1}__setStep(t){this._steps.forEach((e,n)=>{e.style.opacity=n<t-1?1:0})}__resizeContent(){const t=window.getComputedStyle(document.documentElement),e=Number((t.getPropertyValue("--slidem-content-width")||"1760px").slice(0,-2)),n=Number((t.getPropertyValue("--slidem-content-height")||"990px").slice(0,-2)),o=Math.min(window.innerHeight/1.09/n,window.innerWidth/1.09/e);o<1?(document.documentElement.style.setProperty("--slidem-content-scale",o),this.$.content&&(this.$.content.style.transform=`scale(${o})`)):(document.documentElement.style.setProperty("--slidem-content-scale",1),this.$.content&&(this.$.content.style.transform="scale(1)"))}}t.SlidemSlideBase=s,Object.defineProperty(t,"__esModule",{value:!0})}));
diff --git a/node_modules/slidem/slidem-slide.js b/node_modules/slidem/slidem-slide.js
index 4cdc5a1..da28d61 100644
--- a/node_modules/slidem/slidem-slide.js
+++ b/node_modules/slidem/slidem-slide.js
@@ -1,128 +1,356 @@
-import { SlidemSlideBase } from './slidem-slide-base.js';
+/**
+ * @license
+MIT License
 
-const styleText = document.createTextNode(`
-  /* SLIDEM BASIC SLIDE STYLE */
-  slidem-slide h1,
-  slidem-slide h2,
-  slidem-slide h3,
-  slidem-slide h4,
-  slidem-slide h5,
-  slidem-slide h6,
-  slidem-slide p {
-    margin-top: 0px;
-    margin-bottom: 0px;
+Copyright (c) 2017 Goffert van Gool
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+
+*/
+var __defProp = Object.defineProperty;
+var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __publicField = (obj, key, value) => {
+  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
+  return value;
+};
+var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
+
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css
+var sheet = new CSSStyleSheet();
+sheet.replace(`:host {
+  display: flex;
+  flex-direction: row;
+  overflow: hidden;
+  align-items: center;
+  background: var(--background, white);
+  background-size: cover;
+  background-position: center;
+}
+
+:host([in=zoom]) #content,
+:host([out=zoom]) #content {
+  animation-duration: 0.4s;
+  animation-fill-mode: both;
+  animation-timing-function: ease-in-out;
+}
+
+:host([in=zoom][active].animate-forward) #content {
+  animation-name: zoom-in;
+}
+
+:host([in=zoom][previous].animate-backward) #content {
+  animation-name: zoom-out;
+}
+
+:host([out=zoom][previous].animate-forward) #content {
+  animation-name: zoom-out;
+}
+
+:host([out=zoom][active].animate-backward) #content {
+  animation-name: zoom-in;
+}
+
+#container {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  width: 100%;
+}
+
+#content {
+  width: var(--slidem-content-width, 1760px);
+  max-height: var(--slidem-content-height, 990px);
+  flex-shrink: 0;
+}
+
+:host(:not([center])) #content {
+  height: var(--slidem-content-height, 990px);
+}
+
+@keyframes zoom-in {
+  from {
+    opacity: 0;
+    scale: 0;
   }
+  to {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
+  }
+}
 
-  slidem-slide a {
-    color: inherit;
-    text-decoration: none;
+@keyframes zoom-out {
+  from {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
   }
+  to {
+    opacity: 0;
+    scale: 0;
+  }
+}
+
 `);
+var slidem_slide_base_default = sheet;
 
-const styleNode = document.createElement('style');
-styleNode.appendChild(styleText);
-document.head.appendChild(styleNode);
+// html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html
+var template = document.createElement("template");
+template.innerHTML = `<div id="container">
+  <div id="content" part="content">
+    <slot id="slot"></slot>
+  </div>
+</div>
+`;
+var slidem_slide_base_default2 = template;
 
-export class SlidemSlide extends SlidemSlideBase {
+// src/slidem-slide-base.js
+var _instances, _steps, _setStep, setStep_fn, _resizeContent, resizeContent_fn;
+var _SlidemSlideBase = class extends HTMLElement {
+  constructor() {
+    super();
+    __privateAdd(this, _setStep);
+    __privateAdd(this, _resizeContent);
+    __privateAdd(this, _steps, void 0);
+    __publicField(this, "steps");
+    this.attachShadow({ mode: "open" }).append(slidem_slide_base_default2.content.cloneNode(true));
+    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, slidem_slide_base_default];
+  }
+  static {
+    let resizeTimeout;
+    window.addEventListener("resize", () => {
+      window.clearTimeout(resizeTimeout);
+      resizeTimeout = window.setTimeout(() => {
+        __privateGet(_SlidemSlideBase, _instances).forEach((i) => {
+          var _a;
+          return __privateMethod(_a = i, _resizeContent, resizeContent_fn).call(_a);
+        });
+      }, 200);
+    });
+  }
+  get auto() {
+    if (!this.hasAttribute("auto"))
+      return false;
+    else
+      return parseInt(this.getAttribute("auto")) || 5e3;
+  }
+  set auto(v) {
+    if (!(typeof v === "number") || Number.isNaN(v))
+      this.removeAttribute("auto");
+    else
+      this.setAttribute("auto", v.toString());
+  }
+  set step(step) {
+    this.setAttribute("step", step);
+  }
+  get step() {
+    return Number(this.getAttribute("step")) || 1;
+  }
+  get $() {
+    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll("[id]"), (el) => [el.id, el]));
+  }
   connectedCallback() {
-    super.connectedCallback();
-    const background = this.getAttribute('background');
-    if (background) {
-      if (background.match(/^--[a-zA-Z-]*$/)) {
-        // Workaround for IE11 lacking CSS variables
-        if (window.ShadyCSS && window.ShadyCSS.variables) {
-          this.style.background = window.ShadyCSS.variables[background];
-        } else {
-          this.style.background = `var(${background})`;
-        }
-      } else if (background.match(/^(http|\/|\.)/)) {
-        let image = `url(${background})`;
-        const darken = this.getAttribute('darken-background');
-        if (darken) {
-          image = `linear-gradient(rgba(0,0,0,${darken}), rgba(0,0,0,${darken})), ${image}`;
-        }
-        this.style.backgroundImage = image;
-      } else {
-        this.style.background = background;
+    __privateGet(_SlidemSlideBase, _instances).add(this);
+    __privateSet(this, _steps, Array.from(this.querySelectorAll("[reveal]")));
+    this.steps = __privateGet(this, _steps).length;
+    __privateMethod(this, _resizeContent, resizeContent_fn).call(this);
+    __privateGet(this, _steps).forEach((step, i) => step.setAttribute("step", i + 2));
+    if (__privateGet(this, _steps).length)
+      __privateGet(this, _steps)[0].previousElementSibling?.setAttribute("step", 1);
+  }
+  disconnectedCallback() {
+    __privateGet(_SlidemSlideBase, _instances).delete(this);
+  }
+  attributeChangedCallback(attr, _, newVal) {
+    if (attr === "step") {
+      const step = Number(newVal);
+      if (step > this.steps + 1) {
+        this.setAttribute("step", this.steps + 1);
+        return;
       }
+      __privateMethod(this, _setStep, setStep_fn).call(this, step);
     }
-
-    this.textNodes = Array.from(this.querySelectorAll('h1, h2, h3, h4, h5, h6, p, li, span'));
-    this.textNodes.forEach(textNode => {
-      if (textNode.getAttribute('font-size') !== null) {
-        textNode.style.fontSize = textNode.getAttribute('font-size');
-      }
-      if (textNode.getAttribute('bold') !== null) {
-        textNode.style.fontWeight = 'bold';
-      }
-      if (textNode.getAttribute('underline') !== null) {
-        textNode.style.textDecoration = 'underline';
-      }
-      if (textNode.getAttribute('italic') !== null) {
-        textNode.style.fontStyle = 'italic';
-      }
-      if (textNode.getAttribute('uppercase') !== null) {
-        textNode.style.textTransform = 'uppercase';
-      }
-      if (textNode.getAttribute('center') !== null) {
-        textNode.style.textAlign = 'center';
-      }
-      if (textNode.getAttribute('line-height') !== null) {
-        textNode.style.lineHeight = textNode.getAttribute('line-height');
-      }
-      const color = textNode.getAttribute('color');
-      if (color !== null) {
-        if (color.match(/^--[a-zA-Z-]*$/)) {
-          // Workaround for IE11 lacking CSS variables
-          if (window.ShadyCSS && window.ShadyCSS.variables) {
-            textNode.style.color = window.ShadyCSS.variables[color];
-          } else {
-            textNode.style.color = `var(${color})`;
-          }
-        } else {
-          textNode.style.color = color;
-        }
-      }
-    });
-
-    this.layoutNodes = Array.from(this.querySelectorAll('div'));
-    this.layoutNodes.forEach(layoutNode => {
-      if (layoutNode.getAttribute('center') !== null) {
-        layoutNode.style.display = 'flex';
-        layoutNode.style.justifyContent = 'center';
-        layoutNode.style.alignItems = 'center';
-      }
-    });
   }
-
-  static get observedAttributes() {
-    const attrs = super.observedAttributes || [];
-    Array.prototype.push.apply(attrs, ['active', 'next']);
-    return attrs;
+};
+var SlidemSlideBase = _SlidemSlideBase;
+_instances = new WeakMap();
+_steps = new WeakMap();
+_setStep = new WeakSet();
+setStep_fn = function(step) {
+  this.querySelector('[step="1"]')?.toggleAttribute?.("past", step > 1);
+  __privateGet(this, _steps).forEach((el, i) => {
+    const elStep = i + 2;
+    const past = elStep < step;
+    const current = elStep === step;
+    el.toggleAttribute("past", past);
+    el.toggleAttribute("current", current);
+  });
+};
+_resizeContent = new WeakSet();
+resizeContent_fn = function() {
+  const documentStyle = window.getComputedStyle(document.documentElement);
+  const width = Number((documentStyle.getPropertyValue("--slidem-content-width") || "1760px").slice(0, -2));
+  const height = Number((documentStyle.getPropertyValue("--slidem-content-height") || "990px").slice(0, -2));
+  const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);
+  if (scale < 1) {
+    document.documentElement.style.setProperty("--slidem-content-scale", scale);
+    this.$.content?.style?.setProperty("scale", scale);
+  } else {
+    document.documentElement.style.setProperty("--slidem-content-scale", 1);
+    this.$.content?.style?.setProperty("scale", 1);
   }
+};
+__publicField(SlidemSlideBase, "observedAttributes", [
+  "auto",
+  "step"
+]);
+__privateAdd(SlidemSlideBase, _instances, /* @__PURE__ */ new Set());
 
+// src/slidem-slide.js
+var _contentNodes, contentNodes_get, _layoutNodes, layoutNodes_get, _styleBackground, styleBackground_fn, _styleContentNode, styleContentNode_fn, _styleLayoutNode, styleLayoutNode_fn, _rescale, rescale_fn;
+var SlidemSlide = class extends SlidemSlideBase {
+  constructor() {
+    super(...arguments);
+    __privateAdd(this, _contentNodes);
+    __privateAdd(this, _layoutNodes);
+    __privateAdd(this, _styleBackground);
+    __privateAdd(this, _styleContentNode);
+    __privateAdd(this, _styleLayoutNode);
+    __privateAdd(this, _rescale);
+  }
+  async connectedCallback() {
+    super.connectedCallback();
+    for (const node of __privateGet(this, _contentNodes, contentNodes_get))
+      __privateMethod(this, _styleContentNode, styleContentNode_fn).call(this, node);
+    for (const node of __privateGet(this, _layoutNodes, layoutNodes_get))
+      __privateMethod(this, _styleLayoutNode, styleLayoutNode_fn).call(this, node);
+    __privateMethod(this, _styleBackground, styleBackground_fn).call(this);
+    __privateMethod(this, _rescale, rescale_fn).call(this);
+  }
   attributeChangedCallback(attr, oldVal, newVal) {
     super.attributeChangedCallback(attr, oldVal, newVal);
-    if (attr === 'active' || attr === 'next') {
-      if (newVal !== null) {
-        this.__rescale();
-      }
+    if (attr === "active" && newVal != null)
+      this.dispatchEvent(new Event("activated"));
+    if (attr === "active" || attr === "next")
+      __privateMethod(this, _rescale, rescale_fn).call(this);
+    if (attr === "background")
+      __privateMethod(this, _styleBackground, styleBackground_fn).call(this);
+  }
+};
+_contentNodes = new WeakSet();
+contentNodes_get = function() {
+  return this.querySelectorAll("h1, h2, h3, h4, h5, h6, p, li, span, em, strong, small");
+};
+_layoutNodes = new WeakSet();
+layoutNodes_get = function() {
+  return this.querySelectorAll("div");
+};
+_styleBackground = new WeakSet();
+styleBackground_fn = function() {
+  const background = this.getAttribute("background");
+  if (background) {
+    if (background.match(/^--/)) {
+      this.style.setProperty("background", `var(${background})`);
+    } else if (background.match(/^(http|\/|\.)/)) {
+      let image = `url(${background})`;
+      const darken = this.getAttribute("darken-background");
+      if (darken)
+        image = `linear-gradient(rgba(0,0,0,${darken}), rgba(0,0,0,${darken})), ${image}`;
+      this.style.backgroundImage = image;
+    } else {
+      this.style.setProperty("background", background);
     }
   }
-
-  __rescale() {
-    requestAnimationFrame(() => {
-      this.textNodes.forEach(textNode => {
-        if (textNode.getAttribute('fit') !== null) {
-          textNode.style.display = 'table';
-          textNode.style.whiteSpace = 'nowrap';
-          const refFontSize = parseFloat(window.getComputedStyle(textNode, null).getPropertyValue('font-size'));
-          const refWidth = this.$.content.clientWidth;
-          textNode.style.fontSize = `${Math.floor((refFontSize * refWidth) / textNode.clientWidth)}px`;
-        }
-      });
-    });
+};
+_styleContentNode = new WeakSet();
+styleContentNode_fn = function(node) {
+  if (node.hasAttribute("font-size"))
+    node.style.fontSize = node.getAttribute("font-size");
+  if (node.hasAttribute("bold"))
+    node.style.fontWeight = "bold";
+  if (node.hasAttribute("underline"))
+    node.style.textDecoration = "underline";
+  if (node.hasAttribute("italic"))
+    node.style.fontStyle = "italic";
+  if (node.hasAttribute("uppercase"))
+    node.style.textTransform = "uppercase";
+  if (node.hasAttribute("center"))
+    node.style.textAlign = "center";
+  if (node.hasAttribute("line-height"))
+    node.style.lineHeight = node.getAttribute("line-height");
+  const color = node.getAttribute("color");
+  if (color !== null) {
+    if (color.match(/^--/))
+      node.style.color = `var(${color})`;
+    else
+      node.style.color = color;
   }
-}
-
+};
+_styleLayoutNode = new WeakSet();
+styleLayoutNode_fn = function(node) {
+  if (node.getAttribute("center") !== null) {
+    node.style.display = "flex";
+    node.style.justifyContent = "center";
+    node.style.alignItems = "center";
+  }
+};
+_rescale = new WeakSet();
+rescale_fn = async function() {
+  await document.fonts.ready;
+  for (const node of __privateGet(this, _contentNodes, contentNodes_get)) {
+    if (node.hasAttribute("fit")) {
+      node.style.display = "table";
+      node.style.whiteSpace = "nowrap";
+      const refFontSize = parseFloat(getComputedStyle(node, null).getPropertyValue("font-size"));
+      const refWidth = this.$.content.clientWidth;
+      node.style.fontSize = `${Math.floor(refFontSize * refWidth / node.clientWidth)}px`;
+    }
+  }
+};
+__publicField(SlidemSlide, "is", "slidem-slide");
+__publicField(SlidemSlide, "observedAttributes", [
+  ...SlidemSlideBase.observedAttributes,
+  "active",
+  "next",
+  "background"
+]);
 customElements.define(SlidemSlide.is, SlidemSlide);
+export {
+  SlidemSlide
+};
+//# sourceMappingURL=slidem-slide.js.map
diff --git a/node_modules/slidem/slidem-slide.js.map b/node_modules/slidem/slidem-slide.js.map
new file mode 100644
index 0000000..18c07ca
--- /dev/null
+++ b/node_modules/slidem/slidem-slide.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "sources": ["assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css", "html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html", "src/slidem-slide-base.js", "src/slidem-slide.js"],
+  "sourcesContent": ["const sheet = new CSSStyleSheet(); sheet.replace(`:host {\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  align-items: center;\n  background: var(--background, white);\n  background-size: cover;\n  background-position: center;\n}\n\n:host([in=zoom]) #content,\n:host([out=zoom]) #content {\n  animation-duration: 0.4s;\n  animation-fill-mode: both;\n  animation-timing-function: ease-in-out;\n}\n\n:host([in=zoom][active].animate-forward) #content {\n  animation-name: zoom-in;\n}\n\n:host([in=zoom][previous].animate-backward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][previous].animate-forward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][active].animate-backward) #content {\n  animation-name: zoom-in;\n}\n\n#container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n#content {\n  width: var(--slidem-content-width, 1760px);\n  max-height: var(--slidem-content-height, 990px);\n  flex-shrink: 0;\n}\n\n:host(:not([center])) #content {\n  height: var(--slidem-content-height, 990px);\n}\n\n@keyframes zoom-in {\n  from {\n    opacity: 0;\n    scale: 0;\n  }\n  to {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n}\n\n@keyframes zoom-out {\n  from {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n  to {\n    opacity: 0;\n    scale: 0;\n  }\n}\n\n`);export default sheet;", "  const template = document.createElement('template');\n  template.innerHTML = `<div id=\"container\">\n  <div id=\"content\" part=\"content\">\n    <slot id=\"slot\"></slot>\n  </div>\n</div>\n`;\n  export default template;", "import styleSheet from './slidem-slide-base.css' assert { type: 'css' };\nimport template from './slidem-slide-base.html' assert { type: 'html-template' };\n\nexport class SlidemSlideBase extends HTMLElement {\n  static observedAttributes = [\n    'auto',\n    'step',\n  ];\n\n  static #instances = new Set();\n\n  static {\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n      window.clearTimeout(resizeTimeout);\n      resizeTimeout = window.setTimeout(() => {\n        this.#instances.forEach(i => i.#resizeContent());\n      }, 200);\n    });\n  }\n\n  #steps;\n  steps;\n\n  get auto() {\n    if (!this.hasAttribute('auto'))\n      return false;\n    else\n      return parseInt(this.getAttribute('auto')) || 5000;\n  }\n\n  set auto(v) {\n    if (!(typeof v === 'number') || Number.isNaN(v))\n      this.removeAttribute('auto');\n    else\n      this.setAttribute('auto', v.toString())\n  }\n\n  set step(step) {\n    this.setAttribute('step', step);\n  }\n\n  get step() {\n    return Number(this.getAttribute('step')) || 1;\n  }\n\n  get $() {\n    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll('[id]'), el => [el.id, el]))\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).append(template.content.cloneNode(true));\n    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, styleSheet];\n  }\n\n  connectedCallback() {\n    SlidemSlideBase.#instances.add(this);\n    this.#steps = Array.from(this.querySelectorAll('[reveal]'));\n    this.steps = this.#steps.length;\n    this.#resizeContent();\n    this.#steps.forEach((step, i) => step.setAttribute('step', i + 2));\n    if (this.#steps.length)\n      this.#steps[0].previousElementSibling?.setAttribute('step', 1);\n  }\n\n  disconnectedCallback() {\n    SlidemSlideBase.#instances.delete(this);\n  }\n\n  attributeChangedCallback(attr, _, newVal) {\n    if (attr === 'step') {\n      const step = Number(newVal);\n      if (step > this.steps + 1) {\n        this.setAttribute('step', this.steps + 1);\n        return;\n      }\n      this.#setStep(step);\n    }\n  }\n\n  #setStep(step) {\n    this.querySelector('[step=\"1\"]')?.toggleAttribute?.('past', step > 1);\n    this.#steps.forEach((el, i) => {\n      const elStep = i + 2;\n      const past = elStep < step;\n      const current = elStep === step;\n      el.toggleAttribute('past', past);\n      el.toggleAttribute('current', current);\n    });\n  }\n\n  #resizeContent() {\n    const documentStyle = window.getComputedStyle(document.documentElement);\n    const width = Number((documentStyle.getPropertyValue('--slidem-content-width') || '1760px').slice(0, -2));\n    const height = Number((documentStyle.getPropertyValue('--slidem-content-height') || '990px').slice(0, -2));\n    const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);\n    if (scale < 1) {\n      document.documentElement.style.setProperty('--slidem-content-scale', scale);\n      this.$.content?.style?.setProperty('scale', scale);\n    } else {\n      document.documentElement.style.setProperty('--slidem-content-scale', 1);\n      this.$.content?.style?.setProperty('scale', 1);\n    }\n  }\n}\n", "import { SlidemSlideBase } from './slidem-slide-base.js';\n\nexport class SlidemSlide extends SlidemSlideBase {\n  static is = 'slidem-slide';\n\n  static observedAttributes = [\n    ...SlidemSlideBase.observedAttributes,\n    'active',\n    'next',\n    'background',\n  ];\n\n  get #contentNodes() {\n    return this.querySelectorAll('h1, h2, h3, h4, h5, h6, p, li, span, em, strong, small');\n  }\n\n  get #layoutNodes() {\n    return this.querySelectorAll('div');\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    for (const node of this.#contentNodes) this.#styleContentNode(node);\n    for (const node of this.#layoutNodes) this.#styleLayoutNode(node);\n    this.#styleBackground();\n    this.#rescale();\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback(attr, oldVal, newVal);\n    if (attr === 'active' && newVal != null)\n      this.dispatchEvent(new Event('activated'));\n    if (attr === 'active' || attr === 'next')\n      this.#rescale();\n    if (attr === 'background')\n      this.#styleBackground();\n  }\n\n  #styleBackground() {\n    const background = this.getAttribute('background');\n    if (background) {\n      if (background.match(/^--/)) {\n        this.style.setProperty('background', `var(${background})`);\n      } else if (background.match(/^(http|\\/|\\.)/)) {\n        let image = `url(${background})`;\n        const darken = this.getAttribute('darken-background');\n        if (darken)\n          image = `linear-gradient(rgba(0,0,0,${darken}), rgba(0,0,0,${darken})), ${image}`;\n        this.style.backgroundImage = image;\n      } else {\n        this.style.setProperty('background', background);\n      }\n    }\n  }\n\n  #styleContentNode(node) {\n    if (node.hasAttribute('font-size'))   node.style.fontSize =  node.getAttribute('font-size');\n    if (node.hasAttribute('bold'))        node.style.fontWeight = 'bold';\n    if (node.hasAttribute('underline'))   node.style.textDecoration = 'underline';\n    if (node.hasAttribute('italic'))      node.style.fontStyle = 'italic';\n    if (node.hasAttribute('uppercase'))   node.style.textTransform = 'uppercase';\n    if (node.hasAttribute('center'))      node.style.textAlign = 'center';\n    if (node.hasAttribute('line-height')) node.style.lineHeight = node.getAttribute('line-height');\n    const color = node.getAttribute('color');\n    if (color !== null) {\n      if (color.match(/^--/))\n        node.style.color = `var(${color})`;\n      else\n        node.style.color = color;\n    }\n  }\n\n  #styleLayoutNode(node) {\n    if (node.getAttribute('center') !== null) {\n      node.style.display = 'flex';\n      node.style.justifyContent = 'center';\n      node.style.alignItems = 'center';\n    }\n  }\n\n  async #rescale() {\n    await document.fonts.ready;\n    for (const node of this.#contentNodes) {\n      if (node.hasAttribute('fit')) {\n        node.style.display = 'table';\n        node.style.whiteSpace = 'nowrap';\n        const refFontSize = parseFloat(getComputedStyle(node, null).getPropertyValue('font-size'));\n        const refWidth = this.$.content.clientWidth;\n        node.style.fontSize = `${Math.floor((refFontSize * refWidth) / node.clientWidth)}px`;\n      }\n    }\n  }\n}\n\ncustomElements.define(SlidemSlide.is, SlidemSlide);\n"],
+  "mappings": "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",
+  "names": ["slidem_slide_base_default", "slidem_slide_base_default"]
+}
diff --git a/node_modules/slidem/slidem-slide.umd.js b/node_modules/slidem/slidem-slide.umd.js
deleted file mode 100644
index a3ce5c7..0000000
--- a/node_modules/slidem/slidem-slide.umd.js
+++ /dev/null
@@ -1,83 +0,0 @@
-!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("../node_modules/@gluon/gluon/gluon.js")):"function"==typeof define&&define.amd?define(["exports","../node_modules/@gluon/gluon/gluon.js"],e):e((t=t||self).slidem={},t.GluonJS)}(this,(function(t,e){"use strict";const n=document.createTextNode("\n  /* SLIDEM SLIDE GLOBAL STYLES */\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n"),i=document.createElement("style");i.appendChild(n),document.head.appendChild(i);const o=e.html`
-  <style>
-    :host {
-      display: flex;
-      flex-direction: row;
-      overflow: hidden;
-      align-items: center;
-      background-size: cover;
-      background-position: center;
-    }
-
-    :host([zoom-in]) #content, :host([zoom-out]) #content {
-      animation-duration: 0.4s;
-      animation-fill-mode: both;
-      animation-timing-function: ease-in-out;
-    }
-
-    @keyframes zoom-in {
-      from {
-        opacity: 0;
-        transform: scale(0);
-      }
-      to {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-    }
-
-    @keyframes zoom-out {
-      from {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-      to {
-        opacity: 0;
-        transform: scale(0);
-      }
-    }
-
-    :host([zoom-in][active].animate-forward) #content {
-      animation-name: zoom-in;
-    }
-
-    :host([zoom-in][previous].animate-backward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][previous].animate-forward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][active].animate-backward) #content {
-      animation-name: zoom-in;
-    }
-
-    #iefix {
-      width: 100%;
-      display: flex;
-      flex-direction: column;
-      align-items: center;
-    }
-
-    #content {
-      width: var(--slidem-content-width, 1760px);
-      max-height: var(--slidem-content-height, 990px);
-      flex-shrink: 0;
-    }
-
-    :host(:not([center])) #content {
-      height: var(--slidem-content-height, 990px);
-    }
-  </style>
-`;class s extends e.GluonElement{get template(){return null!==this.getAttribute("fullscreen")||this.constructor.fullscreen?e.html`
-        ${o}
-        ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-      `:e.html`
-        ${o}
-        <div id="iefix" part="container">
-          <div id="content" part="content">
-            ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-          </div>
-        </div>
-      `}connectedCallback(){let t;super.connectedCallback(),this._steps=Array.from(this.querySelectorAll("[reveal]")),this.steps=this._steps.length,this.__resizeContent(),window.addEventListener("resize",()=>{window.clearTimeout(t),t=window.setTimeout(()=>{this.__resizeContent()},200)})}static get observedAttributes(){return["step"]}attributeChangedCallback(t,e,n){if("step"===t){const t=Number(n);if(t>this.steps+1)return void this.setAttribute("step",this.steps+1);this.__setStep(t)}}set step(t){this.setAttribute("step",t)}get step(){return Number(this.getAttribute("step"))||1}__setStep(t){this._steps.forEach((e,n)=>{e.style.opacity=n<t-1?1:0})}__resizeContent(){const t=window.getComputedStyle(document.documentElement),e=Number((t.getPropertyValue("--slidem-content-width")||"1760px").slice(0,-2)),n=Number((t.getPropertyValue("--slidem-content-height")||"990px").slice(0,-2)),i=Math.min(window.innerHeight/1.09/n,window.innerWidth/1.09/e);i<1?(document.documentElement.style.setProperty("--slidem-content-scale",i),this.$.content&&(this.$.content.style.transform=`scale(${i})`)):(document.documentElement.style.setProperty("--slidem-content-scale",1),this.$.content&&(this.$.content.style.transform="scale(1)"))}}const l=document.createTextNode("\n  /* SLIDEM BASIC SLIDE STYLE */\n  slidem-slide h1,\n  slidem-slide h2,\n  slidem-slide h3,\n  slidem-slide h4,\n  slidem-slide h5,\n  slidem-slide h6,\n  slidem-slide p {\n    margin-top: 0px;\n    margin-bottom: 0px;\n  }\n\n  slidem-slide a {\n    color: inherit;\n    text-decoration: none;\n  }\n"),r=document.createElement("style");r.appendChild(l),document.head.appendChild(r);class a extends s{connectedCallback(){super.connectedCallback();const t=this.getAttribute("background");if(t)if(t.match(/^--[a-zA-Z-]*$/))window.ShadyCSS&&window.ShadyCSS.variables?this.style.background=window.ShadyCSS.variables[t]:this.style.background=`var(${t})`;else if(t.match(/^(http|\/|\.)/)){let e=`url(${t})`;const n=this.getAttribute("darken-background");n&&(e=`linear-gradient(rgba(0,0,0,${n}), rgba(0,0,0,${n})), ${e}`),this.style.backgroundImage=e}else this.style.background=t;this.textNodes=Array.from(this.querySelectorAll("h1, h2, h3, h4, h5, h6, p, li, span")),this.textNodes.forEach(t=>{null!==t.getAttribute("font-size")&&(t.style.fontSize=t.getAttribute("font-size")),null!==t.getAttribute("bold")&&(t.style.fontWeight="bold"),null!==t.getAttribute("underline")&&(t.style.textDecoration="underline"),null!==t.getAttribute("italic")&&(t.style.fontStyle="italic"),null!==t.getAttribute("uppercase")&&(t.style.textTransform="uppercase"),null!==t.getAttribute("center")&&(t.style.textAlign="center"),null!==t.getAttribute("line-height")&&(t.style.lineHeight=t.getAttribute("line-height"));const e=t.getAttribute("color");null!==e&&(e.match(/^--[a-zA-Z-]*$/)?window.ShadyCSS&&window.ShadyCSS.variables?t.style.color=window.ShadyCSS.variables[e]:t.style.color=`var(${e})`:t.style.color=e)}),this.layoutNodes=Array.from(this.querySelectorAll("div")),this.layoutNodes.forEach(t=>{null!==t.getAttribute("center")&&(t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center")})}static get observedAttributes(){const t=super.observedAttributes||[];return Array.prototype.push.apply(t,["active","next"]),t}attributeChangedCallback(t,e,n){super.attributeChangedCallback(t,e,n),"active"!==t&&"next"!==t||null!==n&&this.__rescale()}__rescale(){requestAnimationFrame(()=>{this.textNodes.forEach(t=>{if(null!==t.getAttribute("fit")){t.style.display="table",t.style.whiteSpace="nowrap";const e=parseFloat(window.getComputedStyle(t,null).getPropertyValue("font-size")),n=this.$.content.clientWidth;t.style.fontSize=Math.floor(e*n/t.clientWidth)+"px"}})})}}customElements.define(a.is,a),t.SlidemSlide=a,Object.defineProperty(t,"__esModule",{value:!0})}));
diff --git a/node_modules/slidem/slidem-video-slide.js b/node_modules/slidem/slidem-video-slide.js
index 18deea2..6305dd5 100644
--- a/node_modules/slidem/slidem-video-slide.js
+++ b/node_modules/slidem/slidem-video-slide.js
@@ -1,42 +1,279 @@
-import { html } from '../@gluon/gluon/gluon.js';
-import { SlidemSlideBase } from './slidem-slide-base.js';
-
-export class SlidemVideoSlide extends SlidemSlideBase {
-  get template() {
-    this.content = html`
-      <video controls id="video"></video>
-    `;
-
-    return html`
-      <style>
-        :host {
-          background: black;
-          color: white;
-        }
-
-        video {
-          width: 100%;
-          max-height: 100%;
-          max-width: 100%;
-        }
-      </style>
-      ${super.template}
-    `;
+/**
+ * @license
+MIT License
+
+Copyright (c) 2017 Goffert van Gool
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+
+*/
+var __defProp = Object.defineProperty;
+var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __publicField = (obj, key, value) => {
+  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
+  return value;
+};
+var __accessCheck = (obj, member, msg) => {
+  if (!member.has(obj))
+    throw TypeError("Cannot " + msg);
+};
+var __privateGet = (obj, member, getter) => {
+  __accessCheck(obj, member, "read from private field");
+  return getter ? getter.call(obj) : member.get(obj);
+};
+var __privateAdd = (obj, member, value) => {
+  if (member.has(obj))
+    throw TypeError("Cannot add the same private member more than once");
+  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
+};
+var __privateSet = (obj, member, value, setter) => {
+  __accessCheck(obj, member, "write to private field");
+  setter ? setter.call(obj, value) : member.set(obj, value);
+  return value;
+};
+var __privateMethod = (obj, member, method) => {
+  __accessCheck(obj, member, "access private method");
+  return method;
+};
+
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css
+var sheet = new CSSStyleSheet();
+sheet.replace(`:host {
+  display: flex;
+  flex-direction: row;
+  overflow: hidden;
+  align-items: center;
+  background: var(--background, white);
+  background-size: cover;
+  background-position: center;
+}
+
+:host([in=zoom]) #content,
+:host([out=zoom]) #content {
+  animation-duration: 0.4s;
+  animation-fill-mode: both;
+  animation-timing-function: ease-in-out;
+}
+
+:host([in=zoom][active].animate-forward) #content {
+  animation-name: zoom-in;
+}
+
+:host([in=zoom][previous].animate-backward) #content {
+  animation-name: zoom-out;
+}
+
+:host([out=zoom][previous].animate-forward) #content {
+  animation-name: zoom-out;
+}
+
+:host([out=zoom][active].animate-backward) #content {
+  animation-name: zoom-in;
+}
+
+#container {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  width: 100%;
+}
+
+#content {
+  width: var(--slidem-content-width, 1760px);
+  max-height: var(--slidem-content-height, 990px);
+  flex-shrink: 0;
+}
+
+:host(:not([center])) #content {
+  height: var(--slidem-content-height, 990px);
+}
+
+@keyframes zoom-in {
+  from {
+    opacity: 0;
+    scale: 0;
+  }
+  to {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
+  }
+}
+
+@keyframes zoom-out {
+  from {
+    opacity: 1;
+    scale: var(--slidem-content-scale, 1);
+  }
+  to {
+    opacity: 0;
+    scale: 0;
+  }
+}
+
+`);
+var slidem_slide_base_default = sheet;
+
+// html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html
+var template = document.createElement("template");
+template.innerHTML = `<div id="container">
+  <div id="content" part="content">
+    <slot id="slot"></slot>
+  </div>
+</div>
+`;
+var slidem_slide_base_default2 = template;
+
+// src/slidem-slide-base.js
+var _instances, _steps, _setStep, setStep_fn, _resizeContent, resizeContent_fn;
+var _SlidemSlideBase = class extends HTMLElement {
+  constructor() {
+    super();
+    __privateAdd(this, _setStep);
+    __privateAdd(this, _resizeContent);
+    __privateAdd(this, _steps, void 0);
+    __publicField(this, "steps");
+    this.attachShadow({ mode: "open" }).append(slidem_slide_base_default2.content.cloneNode(true));
+    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, slidem_slide_base_default];
+  }
+  static {
+    let resizeTimeout;
+    window.addEventListener("resize", () => {
+      window.clearTimeout(resizeTimeout);
+      resizeTimeout = window.setTimeout(() => {
+        __privateGet(_SlidemSlideBase, _instances).forEach((i) => {
+          var _a;
+          return __privateMethod(_a = i, _resizeContent, resizeContent_fn).call(_a);
+        });
+      }, 200);
+    });
+  }
+  get auto() {
+    if (!this.hasAttribute("auto"))
+      return false;
+    else
+      return parseInt(this.getAttribute("auto")) || 5e3;
+  }
+  set auto(v) {
+    if (!(typeof v === "number") || Number.isNaN(v))
+      this.removeAttribute("auto");
+    else
+      this.setAttribute("auto", v.toString());
+  }
+  set step(step) {
+    this.setAttribute("step", step);
+  }
+  get step() {
+    return Number(this.getAttribute("step")) || 1;
+  }
+  get $() {
+    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll("[id]"), (el) => [el.id, el]));
   }
   connectedCallback() {
-    super.connectedCallback();
-    this.$.video.src = this.getAttribute('video');
-    this.$.video.muted = this.getAttribute('muted') !== null;
+    __privateGet(_SlidemSlideBase, _instances).add(this);
+    __privateSet(this, _steps, Array.from(this.querySelectorAll("[reveal]")));
+    this.steps = __privateGet(this, _steps).length;
+    __privateMethod(this, _resizeContent, resizeContent_fn).call(this);
+    __privateGet(this, _steps).forEach((step, i) => step.setAttribute("step", i + 2));
+    if (__privateGet(this, _steps).length)
+      __privateGet(this, _steps)[0].previousElementSibling?.setAttribute("step", 1);
+  }
+  disconnectedCallback() {
+    __privateGet(_SlidemSlideBase, _instances).delete(this);
   }
+  attributeChangedCallback(attr, _, newVal) {
+    if (attr === "step") {
+      const step = Number(newVal);
+      if (step > this.steps + 1) {
+        this.setAttribute("step", this.steps + 1);
+        return;
+      }
+      __privateMethod(this, _setStep, setStep_fn).call(this, step);
+    }
+  }
+};
+var SlidemSlideBase = _SlidemSlideBase;
+_instances = new WeakMap();
+_steps = new WeakMap();
+_setStep = new WeakSet();
+setStep_fn = function(step) {
+  this.querySelector('[step="1"]')?.toggleAttribute?.("past", step > 1);
+  __privateGet(this, _steps).forEach((el, i) => {
+    const elStep = i + 2;
+    const past = elStep < step;
+    const current = elStep === step;
+    el.toggleAttribute("past", past);
+    el.toggleAttribute("current", current);
+  });
+};
+_resizeContent = new WeakSet();
+resizeContent_fn = function() {
+  const documentStyle = window.getComputedStyle(document.documentElement);
+  const width = Number((documentStyle.getPropertyValue("--slidem-content-width") || "1760px").slice(0, -2));
+  const height = Number((documentStyle.getPropertyValue("--slidem-content-height") || "990px").slice(0, -2));
+  const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);
+  if (scale < 1) {
+    document.documentElement.style.setProperty("--slidem-content-scale", scale);
+    this.$.content?.style?.setProperty("scale", scale);
+  } else {
+    document.documentElement.style.setProperty("--slidem-content-scale", 1);
+    this.$.content?.style?.setProperty("scale", 1);
+  }
+};
+__publicField(SlidemSlideBase, "observedAttributes", [
+  "auto",
+  "step"
+]);
+__privateAdd(SlidemSlideBase, _instances, /* @__PURE__ */ new Set());
 
-  static get observedAttributes() {
-    const attrs = super.observedAttributes || [];
-    Array.prototype.push.apply(attrs, ['active']);
-    return attrs;
+// assert-css:/home/bennyp/Developer/slidem/src/slidem-video-slide.css
+var sheet2 = new CSSStyleSheet();
+sheet2.replace(`:host {
+  background: black;
+  color: white;
+}
+
+video {
+  width: 100%;
+  max-height: 100%;
+  max-width: 100%;
+}
+`);
+var slidem_video_slide_default = sheet2;
+
+// html-template:/home/bennyp/Developer/slidem/src/slidem-video-slide.html
+var template2 = document.createElement("template");
+template2.innerHTML = `<video controls id="video"></video>
+`;
+var slidem_video_slide_default2 = template2;
+
+// src/slidem-video-slide.js
+var SlidemVideoSlide = class extends SlidemSlideBase {
+  constructor() {
+    super();
+    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, slidem_video_slide_default];
+    this.$.content.replaceChild(slidem_video_slide_default2.content.cloneNode(true), this.$.slot);
+    this.$.video.src = this.getAttribute("video");
+    this.$.video.muted = this.hasAttribute("muted");
   }
-  attributeChangedCallback(attr, oldVal, newVal) {
-    super.attributeChangedCallback(attr, oldVal, newVal);
-    if (attr === 'active') {
+  attributeChangedCallback(attr, _, newVal) {
+    super.attributeChangedCallback(attr, _, newVal);
+    if (attr === "active") {
       if (newVal !== null) {
         this.$.video.currentTime = 0;
         this.$.video.play();
@@ -45,6 +282,11 @@ export class SlidemVideoSlide extends SlidemSlideBase {
       }
     }
   }
-}
-
+};
+__publicField(SlidemVideoSlide, "is", "slidem-video-slide");
+__publicField(SlidemVideoSlide, "observedAttributes", [...SlidemSlideBase.observedAttributes, "active"]);
 customElements.define(SlidemVideoSlide.is, SlidemVideoSlide);
+export {
+  SlidemVideoSlide
+};
+//# sourceMappingURL=slidem-video-slide.js.map
diff --git a/node_modules/slidem/slidem-video-slide.js.map b/node_modules/slidem/slidem-video-slide.js.map
new file mode 100644
index 0000000..fbaf655
--- /dev/null
+++ b/node_modules/slidem/slidem-video-slide.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "sources": ["assert-css:/home/bennyp/Developer/slidem/src/slidem-slide-base.css", "html-template:/home/bennyp/Developer/slidem/src/slidem-slide-base.html", "src/slidem-slide-base.js", "assert-css:/home/bennyp/Developer/slidem/src/slidem-video-slide.css", "html-template:/home/bennyp/Developer/slidem/src/slidem-video-slide.html", "src/slidem-video-slide.js"],
+  "sourcesContent": ["const sheet = new CSSStyleSheet(); sheet.replace(`:host {\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  align-items: center;\n  background: var(--background, white);\n  background-size: cover;\n  background-position: center;\n}\n\n:host([in=zoom]) #content,\n:host([out=zoom]) #content {\n  animation-duration: 0.4s;\n  animation-fill-mode: both;\n  animation-timing-function: ease-in-out;\n}\n\n:host([in=zoom][active].animate-forward) #content {\n  animation-name: zoom-in;\n}\n\n:host([in=zoom][previous].animate-backward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][previous].animate-forward) #content {\n  animation-name: zoom-out;\n}\n\n:host([out=zoom][active].animate-backward) #content {\n  animation-name: zoom-in;\n}\n\n#container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n#content {\n  width: var(--slidem-content-width, 1760px);\n  max-height: var(--slidem-content-height, 990px);\n  flex-shrink: 0;\n}\n\n:host(:not([center])) #content {\n  height: var(--slidem-content-height, 990px);\n}\n\n@keyframes zoom-in {\n  from {\n    opacity: 0;\n    scale: 0;\n  }\n  to {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n}\n\n@keyframes zoom-out {\n  from {\n    opacity: 1;\n    scale: var(--slidem-content-scale, 1);\n  }\n  to {\n    opacity: 0;\n    scale: 0;\n  }\n}\n\n`);export default sheet;", "  const template = document.createElement('template');\n  template.innerHTML = `<div id=\"container\">\n  <div id=\"content\" part=\"content\">\n    <slot id=\"slot\"></slot>\n  </div>\n</div>\n`;\n  export default template;", "import styleSheet from './slidem-slide-base.css' assert { type: 'css' };\nimport template from './slidem-slide-base.html' assert { type: 'html-template' };\n\nexport class SlidemSlideBase extends HTMLElement {\n  static observedAttributes = [\n    'auto',\n    'step',\n  ];\n\n  static #instances = new Set();\n\n  static {\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n      window.clearTimeout(resizeTimeout);\n      resizeTimeout = window.setTimeout(() => {\n        this.#instances.forEach(i => i.#resizeContent());\n      }, 200);\n    });\n  }\n\n  #steps;\n  steps;\n\n  get auto() {\n    if (!this.hasAttribute('auto'))\n      return false;\n    else\n      return parseInt(this.getAttribute('auto')) || 5000;\n  }\n\n  set auto(v) {\n    if (!(typeof v === 'number') || Number.isNaN(v))\n      this.removeAttribute('auto');\n    else\n      this.setAttribute('auto', v.toString())\n  }\n\n  set step(step) {\n    this.setAttribute('step', step);\n  }\n\n  get step() {\n    return Number(this.getAttribute('step')) || 1;\n  }\n\n  get $() {\n    return Object.fromEntries(Array.from(this.shadowRoot.querySelectorAll('[id]'), el => [el.id, el]))\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).append(template.content.cloneNode(true));\n    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, styleSheet];\n  }\n\n  connectedCallback() {\n    SlidemSlideBase.#instances.add(this);\n    this.#steps = Array.from(this.querySelectorAll('[reveal]'));\n    this.steps = this.#steps.length;\n    this.#resizeContent();\n    this.#steps.forEach((step, i) => step.setAttribute('step', i + 2));\n    if (this.#steps.length)\n      this.#steps[0].previousElementSibling?.setAttribute('step', 1);\n  }\n\n  disconnectedCallback() {\n    SlidemSlideBase.#instances.delete(this);\n  }\n\n  attributeChangedCallback(attr, _, newVal) {\n    if (attr === 'step') {\n      const step = Number(newVal);\n      if (step > this.steps + 1) {\n        this.setAttribute('step', this.steps + 1);\n        return;\n      }\n      this.#setStep(step);\n    }\n  }\n\n  #setStep(step) {\n    this.querySelector('[step=\"1\"]')?.toggleAttribute?.('past', step > 1);\n    this.#steps.forEach((el, i) => {\n      const elStep = i + 2;\n      const past = elStep < step;\n      const current = elStep === step;\n      el.toggleAttribute('past', past);\n      el.toggleAttribute('current', current);\n    });\n  }\n\n  #resizeContent() {\n    const documentStyle = window.getComputedStyle(document.documentElement);\n    const width = Number((documentStyle.getPropertyValue('--slidem-content-width') || '1760px').slice(0, -2));\n    const height = Number((documentStyle.getPropertyValue('--slidem-content-height') || '990px').slice(0, -2));\n    const scale = Math.min(window.innerHeight / 1.09 / height, window.innerWidth / 1.09 / width);\n    if (scale < 1) {\n      document.documentElement.style.setProperty('--slidem-content-scale', scale);\n      this.$.content?.style?.setProperty('scale', scale);\n    } else {\n      document.documentElement.style.setProperty('--slidem-content-scale', 1);\n      this.$.content?.style?.setProperty('scale', 1);\n    }\n  }\n}\n", "const sheet = new CSSStyleSheet(); sheet.replace(`:host {\n  background: black;\n  color: white;\n}\n\nvideo {\n  width: 100%;\n  max-height: 100%;\n  max-width: 100%;\n}\n`);export default sheet;", "  const template = document.createElement('template');\n  template.innerHTML = `<video controls id=\"video\"></video>\n`;\n  export default template;", "import { SlidemSlideBase } from './slidem-slide-base.js';\n\nimport shadowStyle from './slidem-video-slide.css' assert { type: 'css' };\nimport template from './slidem-video-slide.html' assert { type: 'html-template' };\n\nexport class SlidemVideoSlide extends SlidemSlideBase {\n  static is = 'slidem-video-slide';\n\n  static observedAttributes = [...SlidemSlideBase.observedAttributes, 'active'];\n\n  constructor() {\n    super();\n    this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, shadowStyle];\n    this.$.content.replaceChild(template.content.cloneNode(true), this.$.slot);\n    this.$.video.src = this.getAttribute('video');\n    this.$.video.muted = this.hasAttribute('muted');\n  }\n\n  attributeChangedCallback(attr, _, newVal) {\n    super.attributeChangedCallback(attr, _, newVal);\n    if (attr === 'active') {\n      if (newVal !== null) {\n        this.$.video.currentTime = 0;\n        this.$.video.play();\n      } else {\n        this.$.video.pause();\n      }\n    }\n  }\n}\n\ncustomElements.define(SlidemVideoSlide.is, SlidemVideoSlide);\n"],
+  "mappings": "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",
+  "names": ["slidem_slide_base_default", "slidem_slide_base_default", "sheet", "template", "slidem_video_slide_default", "slidem_video_slide_default"]
+}
diff --git a/node_modules/slidem/slidem-video-slide.umd.js b/node_modules/slidem/slidem-video-slide.umd.js
deleted file mode 100644
index 3dc5392..0000000
--- a/node_modules/slidem/slidem-video-slide.umd.js
+++ /dev/null
@@ -1,99 +0,0 @@
-!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("../node_modules/@gluon/gluon/gluon.js")):"function"==typeof define&&define.amd?define(["exports","../node_modules/@gluon/gluon/gluon.js"],e):e((t=t||self).slidem={},t.GluonJS)}(this,(function(t,e){"use strict";const n=document.createTextNode("\n  /* SLIDEM SLIDE GLOBAL STYLES */\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n"),o=document.createElement("style");o.appendChild(n),document.head.appendChild(o);const i=e.html`
-  <style>
-    :host {
-      display: flex;
-      flex-direction: row;
-      overflow: hidden;
-      align-items: center;
-      background-size: cover;
-      background-position: center;
-    }
-
-    :host([zoom-in]) #content, :host([zoom-out]) #content {
-      animation-duration: 0.4s;
-      animation-fill-mode: both;
-      animation-timing-function: ease-in-out;
-    }
-
-    @keyframes zoom-in {
-      from {
-        opacity: 0;
-        transform: scale(0);
-      }
-      to {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-    }
-
-    @keyframes zoom-out {
-      from {
-        opacity: 1;
-        transform: scale(var(--slidem-content-scale, 1));
-      }
-      to {
-        opacity: 0;
-        transform: scale(0);
-      }
-    }
-
-    :host([zoom-in][active].animate-forward) #content {
-      animation-name: zoom-in;
-    }
-
-    :host([zoom-in][previous].animate-backward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][previous].animate-forward) #content {
-      animation-name: zoom-out;
-    }
-
-    :host([zoom-out][active].animate-backward) #content {
-      animation-name: zoom-in;
-    }
-
-    #iefix {
-      width: 100%;
-      display: flex;
-      flex-direction: column;
-      align-items: center;
-    }
-
-    #content {
-      width: var(--slidem-content-width, 1760px);
-      max-height: var(--slidem-content-height, 990px);
-      flex-shrink: 0;
-    }
-
-    :host(:not([center])) #content {
-      height: var(--slidem-content-height, 990px);
-    }
-  </style>
-`;class s extends e.GluonElement{get template(){return null!==this.getAttribute("fullscreen")||this.constructor.fullscreen?e.html`
-        ${i}
-        ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-      `:e.html`
-        ${i}
-        <div id="iefix" part="container">
-          <div id="content" part="content">
-            ${"SlidemSlide"!==this.constructor.name&&this.content||e.html`<slot id="slot"></slot>`}
-          </div>
-        </div>
-      `}connectedCallback(){let t;super.connectedCallback(),this._steps=Array.from(this.querySelectorAll("[reveal]")),this.steps=this._steps.length,this.__resizeContent(),window.addEventListener("resize",()=>{window.clearTimeout(t),t=window.setTimeout(()=>{this.__resizeContent()},200)})}static get observedAttributes(){return["step"]}attributeChangedCallback(t,e,n){if("step"===t){const t=Number(n);if(t>this.steps+1)return void this.setAttribute("step",this.steps+1);this.__setStep(t)}}set step(t){this.setAttribute("step",t)}get step(){return Number(this.getAttribute("step"))||1}__setStep(t){this._steps.forEach((e,n)=>{e.style.opacity=n<t-1?1:0})}__resizeContent(){const t=window.getComputedStyle(document.documentElement),e=Number((t.getPropertyValue("--slidem-content-width")||"1760px").slice(0,-2)),n=Number((t.getPropertyValue("--slidem-content-height")||"990px").slice(0,-2)),o=Math.min(window.innerHeight/1.09/n,window.innerWidth/1.09/e);o<1?(document.documentElement.style.setProperty("--slidem-content-scale",o),this.$.content&&(this.$.content.style.transform=`scale(${o})`)):(document.documentElement.style.setProperty("--slidem-content-scale",1),this.$.content&&(this.$.content.style.transform="scale(1)"))}}class r extends s{get template(){return this.content=e.html`
-      <video controls id="video"></video>
-    `,e.html`
-      <style>
-        :host {
-          background: black;
-          color: white;
-        }
-
-        video {
-          width: 100%;
-          max-height: 100%;
-          max-width: 100%;
-        }
-      </style>
-      ${super.template}
-    `}connectedCallback(){super.connectedCallback(),this.$.video.src=this.getAttribute("video"),this.$.video.muted=null!==this.getAttribute("muted")}static get observedAttributes(){const t=super.observedAttributes||[];return Array.prototype.push.apply(t,["active"]),t}attributeChangedCallback(t,e,n){super.attributeChangedCallback(t,e,n),"active"===t&&(null!==n?(this.$.video.currentTime=0,this.$.video.play()):this.$.video.pause())}}customElements.define(r.is,r),t.SlidemVideoSlide=r,Object.defineProperty(t,"__esModule",{value:!0})}));
diff --git a/node_modules/slidem/slidem.js b/node_modules/slidem/slidem.js
new file mode 100644
index 0000000..8ff7f7a
--- /dev/null
+++ b/node_modules/slidem/slidem.js
@@ -0,0 +1,3 @@
+import './slidem-deck.js';
+import './slidem-slide.js';
+import './slidem-video-slide.js';
